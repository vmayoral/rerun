(function() {var type_impls = {
"rerun":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a></span><a href=\"#impl-Sub%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a></span><a href=\"#impl-Sub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-ConstParamTy-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#1028-1039\">source</a><a href=\"#impl-ConstParamTy-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","ConstParamTy","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a></span><a href=\"#impl-PartialOrd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-Binary-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Product%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Product-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a></span><a href=\"#impl-Add%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a></span><a href=\"#impl-Add-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-TrustedStep-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#19\">source</a><a href=\"#impl-TrustedStep-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/marker/trait.TrustedStep.html\" title=\"trait core::iter::traits::marker::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","TrustedStep","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a></span><a href=\"#impl-AddAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a></span><a href=\"#impl-AddAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a></span><a href=\"#impl-DivAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a></span><a href=\"#impl-DivAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-LowerHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-SimdCast-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/portable-simd/crates/core_simd/src/cast.rs.html#39\">source</a><a href=\"#impl-SimdCast-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/core_simd/cast/trait.SimdCast.html\" title=\"trait core::core_simd::cast::SimdCast\">SimdCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","SimdCast","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-StructuralEq-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#283-295\">source</a><a href=\"#impl-StructuralEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","StructuralEq","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a></span><a href=\"#impl-Rem-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>. The\nresult has the same sign as the left operand.</p>\n<h4 id=\"panics\"><a href=\"#panics\">Panics</a></h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a></span><a href=\"#impl-Rem%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a></span><a href=\"#impl-Rem%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details></div></details>","Rem<NonZeroU32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a></span><a href=\"#impl-BitOr%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NonZeroU32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-UpperHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a></span><a href=\"#impl-RemAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a></span><a href=\"#impl-RemAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1399\">source</a></span><a href=\"#impl-FromStr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1399\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a></span><a href=\"#impl-SubAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a></span><a href=\"#impl-SubAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Eq-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1463\">source</a></span><a href=\"#impl-Eq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Eq","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/hash/mod.rs.html#823-836\">source</a></span><a href=\"#impl-Hash-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/hash/mod.rs.html#823-836\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/hash/mod.rs.html#823-836\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a></span><a href=\"#impl-Ord-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#829-831\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#849-851\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#874-877\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1452-1454\">source</a></span><a href=\"#impl-PartialEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1452-1454\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1452-1454\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a></span><a href=\"#impl-LowerExp-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerExp","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#471-474\">source</a></span><a href=\"#impl-Display-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#471-474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Sum-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Sum%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-StructuralPartialEq-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","StructuralPartialEq","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Step-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#impl-Step-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html\" title=\"trait core::iter::range::Step\">Step</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward_unchecked\" class=\"fn\">forward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward_unchecked\" class=\"fn\">backward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward\" class=\"fn\">forward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward\" class=\"fn\">backward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.steps_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.steps_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.steps_between\" class=\"fn\">steps_between</a>(start: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, end: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the number of <em>successor</em> steps required to get from <code>start</code> to <code>end</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.steps_between\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.forward_checked\" class=\"fn\">forward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.forward_checked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.backward_checked\" class=\"fn\">backward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.backward_checked\">Read more</a></div></details></div></details>","Step","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a></span><a href=\"#impl-Div-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"docblock\"><p>This operation rounds towards zero, truncating any\nfractional part of the exact result.</p>\n<h4 id=\"panics\"><a href=\"#panics\">Panics</a></h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a></span><a href=\"#impl-Div%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a></span><a href=\"#impl-Div%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>This operation rounds towards zero,\ntruncating any fractional part of the exact result, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details></div></details>","Div<NonZeroU32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#201-204\">source</a></span><a href=\"#impl-Debug-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#201-204\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a></span><a href=\"#impl-MulAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a></span><a href=\"#impl-MulAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdElement-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#892\">source</a><a href=\"#impl-SimdElement-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/core_simd/vector/trait.SimdElement.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>)</span></div></span><div class='docblock'>The mask element type corresponding to this element type.</div></details></div></details>","SimdElement","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a></span><a href=\"#impl-UpperExp-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperExp","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-Octal-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a></span><a href=\"#impl-From%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(nonzero: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <code>NonZeroU32</code> into an <code>u32</code></p>\n</div></details></div></details>","From<NonZeroU32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#104\">source</a></span><a href=\"#impl-From%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#104\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>u16</code> to <code>u32</code> losslessly.</p>\n</div></details></div></details>","From<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIpv4Addr%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/net/ip_addr.rs.html#1145\">source</a></span><a href=\"#impl-From%3CIpv4Addr%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/net/ip_addr/struct.Ipv4Addr.html\" title=\"struct core::net::ip_addr::Ipv4Addr\">Ipv4Addr</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/net/ip_addr.rs.html#1148\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(ip: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/net/ip_addr/struct.Ipv4Addr.html\" title=\"struct core::net::ip_addr::Ipv4Addr\">Ipv4Addr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Uses <a href=\"https://doc.rust-lang.org/1.76.0/core/net/ip_addr/struct.Ipv4Addr.html#method.to_bits\" title=\"method core::net::ip_addr::Ipv4Addr::to_bits\"><code>Ipv4Addr::to_bits</code></a> to convert an IPv4 address to a host byte order <code>u32</code>.</p>\n</div></details></div></details>","From<Ipv4Addr>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#87\">source</a></span><a href=\"#impl-From%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#87\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <code>bool</code> to a <code>u32</code>. The resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code>\nvalues.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(u32::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cchar%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.13.0\">1.13.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/char/convert.rs.html#30\">source</a></span><a href=\"#impl-From%3Cchar%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/char/convert.rs.html#43\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::mem;\n\n<span class=\"kw\">let </span>c = <span class=\"string\">'c'</span>;\n<span class=\"kw\">let </span>u = u32::from(c);\n<span class=\"macro\">assert!</span>(<span class=\"number\">4 </span>== mem::size_of_val(<span class=\"kw-2\">&amp;</span>u))</code></pre></div>\n</div></details></div></details>","From<char>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#100\">source</a></span><a href=\"#impl-From%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#100\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>u8</code> to <code>u32</code> losslessly.</p>\n</div></details></div></details>","From<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Copy-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#489-499\">source</a></span><a href=\"#impl-Copy-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Copy","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a></span><a href=\"#impl-Mul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CDuration%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/time.rs.html#977\">source</a></span><a href=\"#impl-Mul%3CDuration%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/time.rs.html#981\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Duration>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a></span><a href=\"#impl-Mul%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/default.rs.html#165\">source</a></span><a href=\"#impl-Default-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/default.rs.html#165\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0</code></p>\n</div></details></div></details>","Default","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#305\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#305\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#321\">source</a></span><a href=\"#impl-TryFrom%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#321\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#306\">source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#306\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#323\">source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#323\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#328\">source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#328\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#322\">source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#322\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#329\">source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#329\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#394\">source</a></span><a href=\"#impl-TryFrom%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#394\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#389\">source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#389\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValueParserFactory-for-u32\" class=\"impl\"><a href=\"#impl-ValueParserFactory-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ValueParserFactory for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parser\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parser\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parser</a> = RangedI64ValueParser&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Generated parser, usually [<code>ValueParser</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_parser\" class=\"method trait-impl\"><a href=\"#method.value_parser\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_parser</a>() -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as ValueParserFactory&gt;::Parser</h4></section></summary><div class='docblock'>Create the specified [<code>Self::Parser</code>]</div></details></div></details>","ValueParserFactory","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(mode: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Support conversions from <code>Mode</code> to raw mode values.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>rustix::fs::{Mode, RawMode};\n<span class=\"macro\">assert_eq!</span>(RawMode::from(Mode::RWXU), <span class=\"number\">0o700</span>);</code></pre></div>\n</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DictionaryKey-for-u32\" class=\"impl\"><a href=\"#impl-DictionaryKey-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/array/trait.DictionaryKey.html\" title=\"trait rerun::external::re_types_core::external::arrow2::array::DictionaryKey\">DictionaryKey</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.KEY_TYPE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.KEY_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/re_types_core/external/arrow2/array/trait.DictionaryKey.html#associatedconstant.KEY_TYPE\" class=\"constant\">KEY_TYPE</a>: <a class=\"enum\" href=\"rerun/external/re_types_core/external/arrow2/datatypes/enum.IntegerType.html\" title=\"enum rerun::external::re_types_core::external::arrow2::datatypes::IntegerType\">IntegerType</a> = IntegerType::UInt32</h4></section></summary><div class='docblock'>The corresponding <a href=\"rerun/external/re_types_core/external/arrow2/datatypes/enum.IntegerType.html\" title=\"enum rerun::external::re_types_core::external::arrow2::datatypes::IntegerType\"><code>IntegerType</code></a> of this key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.always_fits_usize\" class=\"method trait-impl\"><a href=\"#method.always_fits_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/array/trait.DictionaryKey.html#method.always_fits_usize\" class=\"fn\">always_fits_usize</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If the key type always can be converted to <code>usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"rerun/external/re_types_core/external/arrow2/array/trait.DictionaryKey.html#method.as_usize\" class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Represents this key as a <code>usize</code>. <a href=\"rerun/external/re_types_core/external/arrow2/array/trait.DictionaryKey.html#method.as_usize\">Read more</a></div></details></div></details>","DictionaryKey","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeType-for-u32\" class=\"impl\"><a href=\"#impl-NativeType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.PRIMITIVE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PRIMITIVE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedconstant.PRIMITIVE\" class=\"constant\">PRIMITIVE</a>: <a class=\"enum\" href=\"rerun/external/re_types_core/external/arrow2/datatypes/enum.PrimitiveType.html\" title=\"enum rerun::external::re_types_core::external::arrow2::datatypes::PrimitiveType\">PrimitiveType</a> = PrimitiveType::UInt32</h4></section></summary><div class='docblock'>The corresponding variant of <a href=\"rerun/external/re_types_core/external/arrow2/datatypes/enum.PrimitiveType.html\" title=\"enum rerun::external::re_types_core::external::arrow2::datatypes::PrimitiveType\"><code>PrimitiveType</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Type denoting its representation as bytes.\nThis is <code>[u8; N]</code> where <code>N = size_of::&lt;T&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" title=\"type rerun::external::re_types_core::external::arrow2::types::NativeType::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>To bytes in little endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" title=\"type rerun::external::re_types_core::external::arrow2::types::NativeType::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>To bytes in big endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" title=\"type rerun::external::re_types_core::external::arrow2::types::NativeType::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>From bytes in little endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" title=\"type rerun::external::re_types_core::external::arrow2::types::NativeType::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>From bytes in big endian</div></details></div></details>","NativeType","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Simd-for-u32\" class=\"impl\"><a href=\"#impl-Simd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/simd/trait.Simd.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::simd::Simd\">Simd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Simd\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Simd\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rerun/external/re_types_core/external/arrow2/types/simd/trait.Simd.html#associatedtype.Simd\" class=\"associatedtype\">Simd</a> = <a class=\"struct\" href=\"rerun/external/re_types_core/external/arrow2/types/simd/struct.u32x16.html\" title=\"struct rerun::external::re_types_core::external::arrow2::types::simd::u32x16\">u32x16</a></h4></section></summary><div class='docblock'>The SIMD type associated with this trait.\nThis type supports SIMD operations</div></details></div></details>","Simd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index-for-u32\" class=\"impl\"><a href=\"#impl-Index-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.Index.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::Index\">Index</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.Index.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert itself to <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.Index.html#tymethod.from_usize\" class=\"fn\">from_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Convert itself from <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_as_usize\" class=\"method trait-impl\"><a href=\"#method.from_as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.Index.html#tymethod.from_as_usize\" class=\"fn\">from_as_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert itself from <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.range\" class=\"method trait-impl\"><a href=\"#method.range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.Index.html#method.range\" class=\"fn\">range</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>, end: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rerun/external/re_types_core/external/arrow2/types/struct.IndexRange.html\" title=\"struct rerun::external::re_types_core::external::arrow2::types::IndexRange\">IndexRange</a>&lt;Self&gt;&gt;</h4></section></summary><div class='docblock'>An iterator from (inclusive) <code>start</code> to (exclusive) <code>end</code>.</div></details></div></details>","Index","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitChunk-for-u32\" class=\"impl\"><a href=\"#impl-BitChunk-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.BitChunk.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::BitChunk\">BitChunk</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.BitChunk.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" title=\"type rerun::external::re_types_core::external::arrow2::types::NativeType::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>convert itself into bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/re_types_core/external/arrow2/types/trait.BitChunk.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(v: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html\" title=\"trait rerun::external::re_types_core::external::arrow2::types::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"rerun/external/re_types_core/external/arrow2/types/trait.NativeType.html#associatedtype.Bytes\" title=\"type rerun::external::re_types_core::external::arrow2::types::NativeType::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>convert itself from bytes.</div></details></div></details>","BitChunk","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u32\" class=\"impl\"><a href=\"#impl-FromBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","FromBytes","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-u32\" class=\"impl\"><a href=\"#impl-FromZeroes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeroes","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-u32\" class=\"impl\"><a href=\"#impl-AsBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","AsBytes","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/value.rs.html#317-319\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.196/serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/value.rs.html#323\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.196/serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/ser/impls.rs.html#31\">source</a><a href=\"#impl-Serialize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/ser/impls.rs.html#31\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/impls.rs.html#352-358\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/impls.rs.html#352-358\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-WriteAsDefault%3Cu32,+u32%3E-for-u32\" class=\"impl\"><a href=\"#impl-WriteAsDefault%3Cu32,+u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteAsDefault&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WriteAsDefault<u32, u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-VectorWrite%3Cu32%3E-for-u32\" class=\"impl\"><a href=\"#impl-VectorWrite%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VectorWrite&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","VectorWrite<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-WriteAsOptional%3Cu32%3E-for-u32\" class=\"impl\"><a href=\"#impl-WriteAsOptional%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteAsOptional&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WriteAsOptional<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-WriteAs%3Cu32%3E-for-u32\" class=\"impl\"><a href=\"#impl-WriteAs%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteAs&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WriteAs<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-VectorRead%3C'buf%3E-for-u32\" class=\"impl\"><a href=\"#impl-VectorRead%3C'buf%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'buf&gt; VectorRead&lt;'buf&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","VectorRead<'buf>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#207\">source</a><a href=\"#impl-WrappingShr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html\" title=\"trait num_traits::ops::wrapping::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#207\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#24\">source</a><a href=\"#impl-CheckedAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#24\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#175\">source</a><a href=\"#impl-Num-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#175\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#101\">source</a><a href=\"#impl-SaturatingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html\" title=\"trait num_traits::ops::saturating::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#101\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#184\">source</a><a href=\"#impl-CheckedNeg-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html\" title=\"trait num_traits::ops::checked::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#184\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#impl-Saturating-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html\" title=\"trait num_traits::ops::saturating::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#50\">source</a><a href=\"#impl-OverflowingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#50\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#62\">source</a><a href=\"#impl-Bounded-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#62\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#62\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#172\">source</a><a href=\"#impl-WrappingShl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html\" title=\"trait num_traits::ops::wrapping::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#172\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#impl-WrappingNeg-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html\" title=\"trait num_traits::ops::wrapping::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#78\">source</a><a href=\"#impl-WrappingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html\" title=\"trait num_traits::ops::wrapping::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#78\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#95\">source</a><a href=\"#impl-CheckedDiv-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#95\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#impl-MulAddAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html\" title=\"trait num_traits::ops::mul_add::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add operation.</div></details></div></details>","MulAddAssign","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#49\">source</a><a href=\"#impl-Zero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#49\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#49\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#78\">source</a><a href=\"#impl-SaturatingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html\" title=\"trait num_traits::ops::saturating::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#78\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#27\">source</a><a href=\"#impl-OverflowingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#27\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#255\">source</a><a href=\"#impl-CheckedEuclid-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html\" title=\"trait num_traits::ops::euclid::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#255\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#255\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedEuclid","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#impl-FromPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#120\">source</a><a href=\"#impl-Euclid-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#120\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#120\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details></div></details>","Euclid","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#impl-PrimInt-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#265\">source</a><a href=\"#impl-CheckedShr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html\" title=\"trait num_traits::ops::checked::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#265\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#230\">source</a><a href=\"#impl-CheckedShl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html\" title=\"trait num_traits::ops::checked::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#230\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#71\">source</a><a href=\"#impl-CheckedMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#71\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#55\">source</a><a href=\"#impl-WrappingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html\" title=\"trait num_traits::ops::wrapping::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#55\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Unsigned-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/sign.rs.html#205\">source</a><a href=\"#impl-Unsigned-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Unsigned","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#138\">source</a><a href=\"#impl-One-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#138\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#138\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#102\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#impl-MulAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" title=\"type num_traits::ops::mul_add::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation.</div></details></div></details>","MulAdd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#723\">source</a><a href=\"#impl-NumCast-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#723\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">source</a><a href=\"#impl-SaturatingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html\" title=\"trait num_traits::ops::saturating::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#73\">source</a><a href=\"#impl-OverflowingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#73\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#136\">source</a><a href=\"#impl-CheckedRem-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html\" title=\"trait num_traits::ops::checked::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#136\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#impl-ToPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#47\">source</a><a href=\"#impl-CheckedSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#47\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#32\">source</a><a href=\"#impl-WrappingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html\" title=\"trait num_traits::ops::wrapping::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#32\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-u32\" class=\"impl\"><a href=\"#impl-Zeroable-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.76.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-u32\" class=\"impl\"><a href=\"#impl-Contiguous-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Pod-for-u32\" class=\"impl\"><a href=\"#impl-Pod-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Pod","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReaderOffset-for-u32\" class=\"impl\"><a href=\"#impl-ReaderOffset-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ReaderOffset for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u8</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a u8 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u16</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a u16 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_i16</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an i16 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u32</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a u32 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u64</a>(offset64: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, Error&gt;</h4></section></summary><div class='docblock'>Convert a u64 to an offset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_u64\" class=\"method trait-impl\"><a href=\"#method.into_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert an offset to a u64.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked subtraction. Computes <code>self - other</code>.</div></details></div></details>","ReaderOffset","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Pod-for-u32\" class=\"impl\"><a href=\"#impl-Pod-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Pod","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexType-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#55\">source</a><a href=\"#impl-IndexType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html\" title=\"trait petgraph::graph_impl::IndexType\">IndexType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#57\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html#tymethod.new\" class=\"fn\">new</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#61\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html#tymethod.index\" class=\"fn\">index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#65\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html#tymethod.max\" class=\"fn\">max</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","IndexType","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/matrix_graph.rs.html#178\">source</a><a href=\"#impl-Zero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/matrix_graph/trait.Zero.html\" title=\"trait petgraph::matrix_graph::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/matrix_graph.rs.html#178\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/matrix_graph/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Return the singleton object which can be used as a sentinel value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/matrix_graph.rs.html#178\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/matrix_graph/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if <code>self</code> is equal to the sentinel value.</div></details></div></details>","Zero","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoundedMeasure-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#impl-BoundedMeasure-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html\" title=\"trait petgraph::algo::BoundedMeasure\">BoundedMeasure</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html#tymethod.min\" class=\"fn\">min</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html#tymethod.max\" class=\"fn\">max</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></div></details>","BoundedMeasure","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsU256-for-u32\" class=\"impl\"><a href=\"#impl-AsU256-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsU256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u256\" class=\"method trait-impl\"><a href=\"#method.as_u256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u256</a>(self) -&gt; U256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.U256.html\"><code>U256</code></a>.</div></details></div></details>","AsU256","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU256%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3CU256%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: U256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U256>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CI256%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3CI256%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;I256&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: I256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;I256&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<I256>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsI256-for-u32\" class=\"impl\"><a href=\"#impl-AsI256-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsI256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i256\" class=\"method trait-impl\"><a href=\"#method.as_i256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i256</a>(self) -&gt; I256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.I256.html\"><code>I256</code></a>.</div></details></div></details>","AsI256","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUInt32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types_core/datatypes/uint32.rs.html#44\">source</a><a href=\"#impl-From%3CUInt32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"rerun/datatypes/struct.UInt32.html\" title=\"struct rerun::datatypes::UInt32\">UInt32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/datatypes/uint32.rs.html#46\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"rerun/datatypes/struct.UInt32.html\" title=\"struct rerun::datatypes::UInt32\">UInt32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UInt32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SizeBytes-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#214\">source</a><a href=\"#impl-SizeBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/trait.SizeBytes.html\" title=\"trait rerun::SizeBytes\">SizeBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.heap_size_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#214\">source</a><a href=\"#method.heap_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#tymethod.heap_size_bytes\" class=\"fn\">heap_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> on the heap, in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_pod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#214\">source</a><a href=\"#method.is_pod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#method.is_pod\" class=\"fn\">is_pod</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is <code>Self</code> just plain old data? <a href=\"rerun/trait.SizeBytes.html#method.is_pod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_size_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#16\">source</a><a href=\"#method.total_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#method.total_size_bytes\" class=\"fn\">total_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> in bytes, accounting for both stack and heap space.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stack_size_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#24\">source</a><a href=\"#method.stack_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#method.stack_size_bytes\" class=\"fn\">stack_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> on the stack, in bytes. <a href=\"rerun/trait.SizeBytes.html#method.stack_size_bytes\">Read more</a></div></details></div></details>","SizeBytes","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1144\">source</a><a href=\"#impl-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this integer type.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::MIN, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this integer type\n(2<sup>32</sup> − 1).</p>\n<h5 id=\"examples-1\"><a href=\"#examples-1\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::MAX, <span class=\"number\">4294967295</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 32u32</h4></section></summary><div class=\"docblock\"><p>The size of this integer type in bits.</p>\n<h5 id=\"examples-2\"><a href=\"#examples-2\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::BITS, <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a string slice in a given base to an integer.</p>\n<p>The string is expected to be an optional <code>+</code> sign\nfollowed by digits.\nLeading and trailing whitespace represent an error.\nDigits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples-3\"><a href=\"#examples-3\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::from_str_radix(<span class=\"string\">\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-4\"><a href=\"#examples-4\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b01001100u32</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.count_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of zeros in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-5\"><a href=\"#examples-5\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::MAX.count_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>Depending on what you’re doing with the value, you might also be interested in the\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.ilog2\" title=\"method u32::ilog2\"><code>ilog2</code></a> function which returns a consistent number, even if the type widens.</p>\n<h5 id=\"examples-6\"><a href=\"#examples-6\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u32::MAX &gt;&gt; <span class=\"number\">2</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-7\"><a href=\"#examples-7\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b0101000u32</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-8\"><a href=\"#examples-8\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = !(u32::MAX &gt;&gt; <span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(n.leading_ones(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing ones in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-9\"><a href=\"#examples-9\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b1010111u32</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the left by a specified amount, <code>n</code>,\nwrapping the truncated bits to the end of the resulting integer.</p>\n<p>Please note this isn’t the same operation as the <code>&lt;&lt;</code> shifting operator!</p>\n<h5 id=\"examples-10\"><a href=\"#examples-10\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x10000b3u32</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0xb301</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_left(<span class=\"number\">8</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the right by a specified amount, <code>n</code>,\nwrapping the truncated bits to the beginning of the resulting\ninteger.</p>\n<p>Please note this isn’t the same operation as the <code>&gt;&gt;</code> shifting operator!</p>\n<h5 id=\"examples-11\"><a href=\"#examples-11\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0xb301u32</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0x10000b3</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_right(<span class=\"number\">8</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Reverses the byte order of the integer.</p>\n<h5 id=\"examples-12\"><a href=\"#examples-12\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x12345678u32</span>;\n<span class=\"kw\">let </span>m = n.swap_bytes();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x78563412</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0, const since 1.37.0\">1.37.0 (const: 1.37.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Reverses the order of bits in the integer. The least significant bit becomes the most significant bit,\nsecond least-significant bit becomes second most-significant bit, etc.</p>\n<h5 id=\"examples-13\"><a href=\"#examples-13\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x12345678u32</span>;\n<span class=\"kw\">let </span>m = n.reverse_bits();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x1e6a2c48</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0</span>, <span class=\"number\">0u32</span>.reverse_bits());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from big endian to the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-14\"><a href=\"#examples-14\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u32::from_be(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u32::from_be(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from little endian to the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-15\"><a href=\"#examples-15\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u32::from_le(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u32::from_le(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to big endian from the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-16\"><a href=\"#examples-16\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to little endian from the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-17\"><a href=\"#examples-17\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code>\nif overflow occurred.</p>\n<h5 id=\"examples-18\"><a href=\"#examples-18\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(u32::MAX - <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer addition. Computes <code>self + rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>This results in undefined behavior when\n<code>self + rhs &gt; u32::MAX</code> or <code>self + rhs &lt; u32::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_add\" title=\"method u32::checked_add\"><code>checked_add</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition with a signed integer. Computes <code>self + rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-19\"><a href=\"#examples-19\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_add_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_add_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).checked_add_signed(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-20\"><a href=\"#examples-20\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer subtraction. Computes <code>self - rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety-1\"><a href=\"#safety-1\">Safety</a></h5>\n<p>This results in undefined behavior when\n<code>self - rhs &gt; u32::MAX</code> or <code>self - rhs &lt; u32::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_sub\" title=\"method u32::checked_sub\"><code>checked_sub</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer multiplication. Computes <code>self * rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-21\"><a href=\"#examples-21\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_mul(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_mul(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer multiplication. Computes <code>self * rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety-2\"><a href=\"#safety-2\">Safety</a></h5>\n<p>This results in undefined behavior when\n<code>self * rhs &gt; u32::MAX</code> or <code>self * rhs &lt; u32::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_mul\" title=\"method u32::checked_mul\"><code>checked_mul</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.52.0\">1.0.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer division. Computes <code>self / rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-22\"><a href=\"#examples-22\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.checked_div(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_div(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-23\"><a href=\"#examples-23\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.checked_div_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_div_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-24\"><a href=\"#examples-24\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-25\"><a href=\"#examples-25\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.ilog\" class=\"fn\">ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>ilog2</code> can produce results more efficiently for base 2, and <code>ilog10</code>\ncan produce results more efficiently for base 10.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>This function will panic if <code>self</code> is zero, or if <code>base</code> is less than 2.</p>\n<h5 id=\"examples-26\"><a href=\"#examples-26\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.ilog(<span class=\"number\">5</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-2\"><a href=\"#panics-2\">Panics</a></h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"examples-27\"><a href=\"#examples-27\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.ilog2(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-3\"><a href=\"#panics-3\">Panics</a></h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u32</span>.ilog10(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_ilog\" class=\"fn\">checked_ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>Returns <code>None</code> if the number is zero, or if the base is not at least 2.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>checked_ilog2</code> can produce results more efficiently for base 2, and\n<code>checked_ilog10</code> can produce results more efficiently for base 10.</p>\n<h5 id=\"examples-28\"><a href=\"#examples-28\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_ilog(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_ilog2\" class=\"fn\">checked_ilog2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-29\"><a href=\"#examples-29\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.checked_ilog2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_ilog10\" class=\"fn\">checked_ilog10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-30\"><a href=\"#examples-30\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u32</span>.checked_ilog10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>, returning <code>None</code> unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"examples-31\"><a href=\"#examples-31\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.checked_neg(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-32\"><a href=\"#examples-32\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u32</span>.checked_shl(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x10</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.checked_shl(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_shifts\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_shl\" class=\"fn\">unchecked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-3\"><a href=\"#safety-3\">Safety</a></h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_shl\" title=\"method u32::checked_shl\"><code>checked_shl</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-33\"><a href=\"#examples-33\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.checked_shr(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.checked_shr(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_shifts\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_shr\" class=\"fn\">unchecked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-4\"><a href=\"#safety-4\">Safety</a></h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_shr\" title=\"method u32::checked_shr\"><code>checked_shr</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if\noverflow occurred.</p>\n<h5 id=\"examples-34\"><a href=\"#examples-34\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.checked_pow(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">32</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_pow(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-35\"><a href=\"#examples-35\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.saturating_add(<span class=\"number\">1</span>), <span class=\"number\">101</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.saturating_add(<span class=\"number\">127</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating addition with a signed integer. Computes <code>self + rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-36\"><a href=\"#examples-36\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.saturating_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.saturating_add_signed(-<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).saturating_add_signed(<span class=\"number\">4</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating\nat the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-37\"><a href=\"#examples-37\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.saturating_sub(<span class=\"number\">27</span>), <span class=\"number\">73</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13u32</span>.saturating_sub(<span class=\"number\">127</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer multiplication. Computes <code>self * rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-38\"><a href=\"#examples-38\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.saturating_mul(<span class=\"number\">10</span>), <span class=\"number\">20</span>);\n<span class=\"macro\">assert_eq!</span>((u32::MAX).saturating_mul(<span class=\"number\">10</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const since 1.58.0\">1.58.0 (const: 1.58.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer division. Computes <code>self / rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</p>\n<h5 id=\"examples-39\"><a href=\"#examples-39\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.saturating_div(<span class=\"number\">2</span>), <span class=\"number\">2</span>);\n</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let _ </span>= <span class=\"number\">1u32</span>.saturating_div(<span class=\"number\">0</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-40\"><a href=\"#examples-40\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">4u32</span>.saturating_pow(<span class=\"number\">3</span>), <span class=\"number\">64</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.saturating_pow(<span class=\"number\">2</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition. Computes <code>self + rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-41\"><a href=\"#examples-41\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u32</span>.wrapping_add(<span class=\"number\">55</span>), <span class=\"number\">255</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u32</span>.wrapping_add(u32::MAX), <span class=\"number\">199</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition with a signed integer. Computes\n<code>self + rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-42\"><a href=\"#examples-42\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_add_signed(-<span class=\"number\">2</span>), u32::MAX);\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).wrapping_add_signed(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction. Computes <code>self - rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-43\"><a href=\"#examples-43\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_sub(<span class=\"number\">100</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_sub(u32::MAX), <span class=\"number\">101</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) multiplication. Computes <code>self * rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-44\"><a href=\"#examples-44\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u8</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">120</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">25u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">44</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) division. Computes <code>self / rhs</code>.\nWrapped division on unsigned types is just normal division.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.</p>\n<h5 id=\"panics-4\"><a href=\"#panics-4\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-45\"><a href=\"#examples-45\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>.\nWrapped division on unsigned types is just normal division.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.wrapping_div(rhs)</code>.</p>\n<h5 id=\"panics-5\"><a href=\"#panics-5\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-46\"><a href=\"#examples-46\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_rem\" class=\"fn\">wrapping_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) remainder. Computes <code>self % rhs</code>.\nWrapped remainder calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.</p>\n<h5 id=\"panics-6\"><a href=\"#panics-6\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-47\"><a href=\"#examples-47\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_rem_euclid\" class=\"fn\">wrapping_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.\nWrapped modulo calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.wrapping_rem(rhs)</code>.</p>\n<h5 id=\"panics-7\"><a href=\"#panics-7\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-48\"><a href=\"#examples-48\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type.</p>\n<p>Since unsigned types do not have negative equivalents\nall applications of this function will wrap (except for <code>-0</code>).\nFor values smaller than the corresponding signed type’s maximum\nthe result is the same as casting the corresponding signed value.\nAny larger values are equivalent to <code>MAX + 1 - (val - MAX - 1)</code> where\n<code>MAX</code> is the corresponding signed type’s maximum.</p>\n<h5 id=\"examples-49\"><a href=\"#examples-49\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u32</span>.wrapping_neg(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.wrapping_neg(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13_u32</span>.wrapping_neg(), (!<span class=\"number\">13</span>) + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">42_u32</span>.wrapping_neg(), !(<span class=\"number\">42 </span>- <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-left; the\nRHS of a wrapping shift-left is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.rotate_left\" title=\"method u32::rotate_left\"><code>rotate_left</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-50\"><a href=\"#examples-50\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_shl(<span class=\"number\">7</span>), <span class=\"number\">128</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_shl(<span class=\"number\">128</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-right; the\nRHS of a wrapping shift-right is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.rotate_right\" title=\"method u32::rotate_right\"><code>rotate_right</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-51\"><a href=\"#examples-51\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.wrapping_shr(<span class=\"number\">7</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.wrapping_shr(<span class=\"number\">128</span>), <span class=\"number\">128</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_pow\" class=\"fn\">wrapping_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-52\"><a href=\"#examples-52\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.wrapping_pow(<span class=\"number\">5</span>), <span class=\"number\">243</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_pow(<span class=\"number\">6</span>), <span class=\"number\">217</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code></p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-53\"><a href=\"#examples-53\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_add(<span class=\"number\">2</span>), (<span class=\"number\">7</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.overflowing_add(<span class=\"number\">1</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.carrying_add\" class=\"fn\">carrying_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> + <code>carry</code> and returns a tuple containing\nthe sum and the output carry.</p>\n<p>Performs “ternary addition” of two integer operands and a carry-in\nbit, and returns an output integer and a carry-out bit. This allows\nchaining together multiple additions to create a wider addition, and\ncan be useful for bignum addition.</p>\n<p>This can be thought of as a 32-bit “full adder”, in the electronics sense.</p>\n<p>If the input carry is false, this method is equivalent to\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.overflowing_add\" title=\"method u32::overflowing_add\"><code>overflowing_add</code></a>, and the output carry is\nequal to the overflow flag. Note that although carry and overflow\nflags are similar for unsigned integers, they are different for\nsigned integers.</p>\n<h5 id=\"examples-54\"><a href=\"#examples-54\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    3  MAX    (a = 3 × 2^32 + 2^32 - 1)\n// +  5    7    (b = 5 × 2^32 + 7)\n// ---------\n//    9    6    (sum = 9 × 2^32 + 6)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u32, u32) = (<span class=\"number\">3</span>, u32::MAX);\n<span class=\"kw\">let </span>(b1, b0): (u32, u32) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>carry0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(sum0, carry1) = a0.carrying_add(b0, carry0);\n<span class=\"macro\">assert_eq!</span>(carry1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(sum1, carry2) = a1.carrying_add(b1, carry1);\n<span class=\"macro\">assert_eq!</span>(carry2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((sum1, sum0), (<span class=\"number\">9</span>, <span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> with a signed <code>rhs</code></p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-55\"><a href=\"#examples-55\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.overflowing_add_signed(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.overflowing_add_signed(-<span class=\"number\">2</span>), (u32::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).overflowing_add_signed(<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code></p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-56\"><a href=\"#examples-56\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_sub(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.overflowing_sub(<span class=\"number\">1</span>), (u32::MAX, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.borrowing_sub\" class=\"fn\">borrowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, borrow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> − <code>rhs</code> − <code>borrow</code> and returns a tuple\ncontaining the difference and the output borrow.</p>\n<p>Performs “ternary subtraction” by subtracting both an integer\noperand and a borrow-in bit from <code>self</code>, and returns an output\ninteger and a borrow-out bit. This allows chaining together multiple\nsubtractions to create a wider subtraction, and can be useful for\nbignum subtraction.</p>\n<h5 id=\"examples-57\"><a href=\"#examples-57\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    9    6    (a = 9 × 2^32 + 6)\n// -  5    7    (b = 5 × 2^32 + 7)\n// ---------\n//    3  MAX    (diff = 3 × 2^32 + 2^32 - 1)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u32, u32) = (<span class=\"number\">9</span>, <span class=\"number\">6</span>);\n<span class=\"kw\">let </span>(b1, b0): (u32, u32) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>borrow0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(diff0, borrow1) = a0.borrowing_sub(b0, borrow0);\n<span class=\"macro\">assert_eq!</span>(borrow1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(diff1, borrow2) = a1.borrowing_sub(b1, borrow1);\n<span class=\"macro\">assert_eq!</span>(borrow2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((diff1, diff0), (<span class=\"number\">3</span>, u32::MAX));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0, const since 1.60.0\">1.60.0 (const: 1.60.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute difference between <code>self</code> and <code>other</code>.</p>\n<h5 id=\"examples-58\"><a href=\"#examples-58\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.abs_diff(<span class=\"number\">80</span>), <span class=\"number\">20u32</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.abs_diff(<span class=\"number\">110</span>), <span class=\"number\">10u32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the multiplication of <code>self</code> and <code>rhs</code>.</p>\n<p>Returns a tuple of the multiplication along with a boolean\nindicating whether an arithmetic overflow would occur. If an\noverflow would have occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-59\"><a href=\"#examples-59\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.overflowing_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.</p>\n<h5 id=\"panics-8\"><a href=\"#panics-8\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-60\"><a href=\"#examples-60\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_div(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of Euclidean division <code>self.div_euclid(rhs)</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.overflowing_div(rhs)</code>.</p>\n<h5 id=\"panics-9\"><a href=\"#panics-9\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-61\"><a href=\"#examples-61\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_div_euclid(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_rem\" class=\"fn\">overflowing_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the remainder after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.</p>\n<h5 id=\"panics-10\"><a href=\"#panics-10\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-62\"><a href=\"#examples-62\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_rem(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_rem_euclid\" class=\"fn\">overflowing_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder <code>self.rem_euclid(rhs)</code> as if by Euclidean division.</p>\n<p>Returns a tuple of the modulo after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this operation\nis exactly equal to <code>self.overflowing_rem(rhs)</code>.</p>\n<h5 id=\"panics-11\"><a href=\"#panics-11\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-63\"><a href=\"#examples-63\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_rem_euclid(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self in an overflowing fashion.</p>\n<p>Returns <code>!self + 1</code> using wrapping operations to return the value\nthat represents the negation of this unsigned value. Note that for\npositive unsigned values overflow always occurs, but negating 0 does\nnot overflow.</p>\n<h5 id=\"examples-64\"><a href=\"#examples-64\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.overflowing_neg(), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.overflowing_neg(), (-<span class=\"number\">2i32 </span><span class=\"kw\">as </span>u32, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self left by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-65\"><a href=\"#examples-65\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u32</span>.overflowing_shl(<span class=\"number\">4</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u32</span>.overflowing_shl(<span class=\"number\">132</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self right by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-66\"><a href=\"#examples-66\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.overflowing_shr(<span class=\"number\">4</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.overflowing_shr(<span class=\"number\">132</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_pow\" class=\"fn\">overflowing_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<p>Returns a tuple of the exponentiation along with a bool indicating\nwhether an overflow happened.</p>\n<h5 id=\"examples-67\"><a href=\"#examples-67\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.overflowing_pow(<span class=\"number\">5</span>), (<span class=\"number\">243</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.overflowing_pow(<span class=\"number\">6</span>), (<span class=\"number\">217</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<h5 id=\"examples-68\"><a href=\"#examples-68\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isqrt\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/116226\" title=\"Tracking issue for isqrt\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.isqrt\" class=\"fn\">isqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isqrt</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the square root of the number, rounded down.</p>\n<h5 id=\"examples-69\"><a href=\"#examples-69\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isqrt)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u32</span>.isqrt(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Performs Euclidean division.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self / rhs</code>.</p>\n<h5 id=\"panics-12\"><a href=\"#panics-12\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-70\"><a href=\"#examples-70\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u32</span>.div_euclid(<span class=\"number\">4</span>), <span class=\"number\">1</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the least remainder of <code>self (mod rhs)</code>.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self % rhs</code>.</p>\n<h5 id=\"panics-13\"><a href=\"#panics-13\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-71\"><a href=\"#examples-71\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u32</span>.rem_euclid(<span class=\"number\">4</span>), <span class=\"number\">3</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_roundings</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards negative infinity.</p>\n<p>This is the same as performing <code>self / rhs</code> for all unsigned integers.</p>\n<h5 id=\"panics-14\"><a href=\"#panics-14\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-72\"><a href=\"#examples-72\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_roundings)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u32</span>.div_floor(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.div_ceil\" class=\"fn\">div_ceil</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards positive infinity.</p>\n<h5 id=\"panics-15\"><a href=\"#panics-15\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior\"><a href=\"#overflow-behavior\">Overflow behavior</a></h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-73\"><a href=\"#examples-73\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u32</span>.div_ceil(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>.</p>\n<h5 id=\"panics-16\"><a href=\"#panics-16\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior-1\"><a href=\"#overflow-behavior-1\">Overflow behavior</a></h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-74\"><a href=\"#examples-74\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u32</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">16</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u32</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">24</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>. Returns <code>None</code> if <code>rhs</code> is zero or the\noperation would result in overflow.</p>\n<h5 id=\"examples-75\"><a href=\"#examples-75\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u32</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">16</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u32</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">24</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u32</span>.checked_next_multiple_of(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_next_multiple_of(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.</p>\n<h5 id=\"examples-76\"><a href=\"#examples-76\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">16u32</span>.is_power_of_two());\n<span class=\"macro\">assert!</span>(!<span class=\"number\">10u32</span>.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>.</p>\n<p>When return value overflows (i.e., <code>self &gt; (1 &lt;&lt; (N-1))</code> for type\n<code>uN</code>), it panics in debug mode and the return value is wrapped to 0 in\nrelease mode (the only situation in which method can return 0).</p>\n<h5 id=\"examples-77\"><a href=\"#examples-77\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.next_power_of_two(), <span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\n<code>None</code> is returned, otherwise the power of two is wrapped in <code>Some</code>.</p>\n<h5 id=\"examples-78\"><a href=\"#examples-78\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_next_power_of_two(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/32463\" title=\"Tracking issue for wrapping_next_power_of_two\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>wrapping_next_power_of_two</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\nthe return value is wrapped to <code>0</code>.</p>\n<h5 id=\"examples-79\"><a href=\"#examples-79\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(wrapping_next_power_of_two)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.wrapping_next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.wrapping_next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.wrapping_next_power_of_two(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nbig-endian (network) byte order.</p>\n<h5 id=\"examples-80\"><a href=\"#examples-80\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12345678u32</span>.to_be_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nlittle-endian byte order.</p>\n<h5 id=\"examples-81\"><a href=\"#examples-81\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12345678u32</span>.to_le_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nnative byte order.</p>\n<p>As the target platform’s native endianness is used, portable code\nshould use <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.to_be_bytes\" title=\"method u32::to_be_bytes\"><code>to_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.to_le_bytes\" title=\"method u32::to_le_bytes\"><code>to_le_bytes</code></a>, as appropriate,\ninstead.</p>\n<h5 id=\"examples-82\"><a href=\"#examples-82\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12345678u32</span>.to_ne_bytes();\n<span class=\"macro\">assert_eq!</span>(\n    bytes,\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]\n    } <span class=\"kw\">else </span>{\n        [<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n    }\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its representation\nas a byte array in big endian.</p>\n<h5 id=\"examples-83\"><a href=\"#examples-83\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u32::from_be_bytes([<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12345678</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_be_u32(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u32 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u32&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u32::from_be_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its representation\nas a byte array in little endian.</p>\n<h5 id=\"examples-84\"><a href=\"#examples-84\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u32::from_le_bytes([<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12345678</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_le_u32(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u32 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u32&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u32::from_le_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its memory representation\nas a byte array in native endianness.</p>\n<p>As the target platform’s native endianness is used, portable code\nlikely wants to use <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.from_be_bytes\" title=\"associated function u32::from_be_bytes\"><code>from_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.from_le_bytes\" title=\"associated function u32::from_le_bytes\"><code>from_le_bytes</code></a>, as\nappropriate instead.</p>\n<h5 id=\"examples-85\"><a href=\"#examples-85\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u32::from_ne_bytes(<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n});\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12345678</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_ne_u32(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u32 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u32&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u32::from_ne_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MIN</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MIN\" title=\"associated constant u32::MIN\"><code>u32::MIN</code></a> instead.</p>\n<p>Returns the smallest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MAX</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MAX\" title=\"associated constant u32::MAX\"><code>u32::MAX</code></a> instead.</p>\n<p>Returns the largest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.widening_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1164\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.widening_mul\" class=\"fn\">widening_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the complete product <code>self * rhs</code> without the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>If you also need to add a carry to the wide result, then you want\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.carrying_mul\" title=\"method u32::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-86\"><a href=\"#examples-86\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.widening_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.widening_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1164\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.carrying_mul\" class=\"fn\">carrying_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need the <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.widening_mul\" title=\"method u32::widening_mul\"><code>Self::widening_mul</code></a> instead.</p>\n<h5 id=\"examples-87\"><a href=\"#examples-87\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">10</span>), (<span class=\"number\">20</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065418</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.carrying_mul(u32::MAX, u32::MAX), (<span class=\"number\">0</span>, u32::MAX));</code></pre></div>\n<p>This is the core operation needed for scalar multiplication when\nimplementing it for wider-than-native types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">fn </span>scalar_mul_eq(little_endian_digits: <span class=\"kw-2\">&amp;mut </span>Vec&lt;u16&gt;, multiplicand: u16) {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n    <span class=\"kw\">for </span>d <span class=\"kw\">in </span>little_endian_digits.iter_mut() {\n        (<span class=\"kw-2\">*</span>d, carry) = d.carrying_mul(multiplicand, carry);\n    }\n    <span class=\"kw\">if </span>carry != <span class=\"number\">0 </span>{\n        little_endian_digits.push(carry);\n    }\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">10</span>, <span class=\"number\">20</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">30</span>, <span class=\"number\">60</span>]);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x87654321_u64 </span>* <span class=\"number\">0xFEED</span>, <span class=\"number\">0x86D3D159E38D</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">0x4321</span>, <span class=\"number\">0x8765</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">0xFEED</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">0xE38D</span>, <span class=\"number\">0xD159</span>, <span class=\"number\">0x86D3</span>]);</code></pre></div>\n<p>If <code>carry</code> is zero, this is similar to <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.overflowing_mul\" title=\"method u32::overflowing_mul\"><code>overflowing_mul</code></a>,\nexcept that it gives the value of the overflow instead of just whether one happened:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>));\n<span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>));</code></pre></div>\n<p>The value of the first field in the returned tuple matches what you’d get\nby combining the <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.wrapping_mul\" title=\"method u32::wrapping_mul\"><code>wrapping_mul</code></a> and\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.wrapping_add\" title=\"method u32::wrapping_add\"><code>wrapping_add</code></a> methods:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(\n    <span class=\"number\">789_u16</span>.carrying_mul(<span class=\"number\">456</span>, <span class=\"number\">123</span>).<span class=\"number\">0</span>,\n    <span class=\"number\">789_u16</span>.wrapping_mul(<span class=\"number\">456</span>).wrapping_add(<span class=\"number\">123</span>),\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1165\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-88\"><a href=\"#examples-88\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details></div></details>",0,"rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-IsEnabled-for-u32\" class=\"impl\"><a href=\"#impl-IsEnabled-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_viewer_context/external/nohash_hasher/trait.IsEnabled.html\" title=\"trait rerun::external::re_viewer_context::external::nohash_hasher::IsEnabled\">IsEnabled</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","IsEnabled","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-u32\" class=\"impl\"><a href=\"#impl-Value-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/uniform.rs.html#567\">source</a><a href=\"#impl-SampleUniform-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Weight-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted.rs.html#44\">source</a><a href=\"#impl-Weight-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html\" title=\"trait rand::distributions::weighted::alias_method::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Weight","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type-for-u32\" class=\"impl\"><a href=\"#impl-Type-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Type for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.signature\" class=\"method trait-impl\"><a href=\"#method.signature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">signature</a>() -&gt; Signature&lt;'static&gt;</h4></section></summary><div class='docblock'>Get the signature for the implementing type. <a>Read more</a></div></details></div></details>","Type","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Basic-for-u32\" class=\"impl\"><a href=\"#impl-Basic-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Basic for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIGNATURE_CHAR\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_CHAR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_CHAR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\">char</a> = &#39;u&#39;</h4></section></summary><div class='docblock'>The type signature, as a character.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIGNATURE_STR\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_STR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_STR</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a> = &quot;u&quot;</h4></section></summary><div class='docblock'>The type signature, as a string.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alignment\" class=\"method trait-impl\"><a href=\"#method.alignment\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">alignment</a>(format: EncodingFormat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The required padding alignment for the given format.</div></details></div></details>","Basic","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26OwnedValue%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26OwnedValue%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a OwnedValue&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    v: &amp;'a OwnedValue\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a OwnedValue&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a OwnedValue>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CValue%3C'a%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3CValue%3C'a%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Value&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: Value&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Value&lt;'a&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Value<'a>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26Value%3C'a%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26Value%3C'a%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a Value&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: &amp;'a Value&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a Value&lt;'a&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a Value<'a>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3COwnedValue%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3COwnedValue%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;OwnedValue&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(v: OwnedValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;OwnedValue&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<OwnedValue>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUid%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CUid%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uid&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uid: Uid) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Uid>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGid%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGid%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Gid&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(gid: Gid) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Gid>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CZ0%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CZ0%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<Z0>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CPInt%3CU%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CPInt%3CU%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<PInt<U>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUInt%3CU,+B%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CUInt%3CU,+B%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, B&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UInt<U, B>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUTerm%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CUTerm%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UTerm>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(mode: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Support conversions from <code>Mode</code> to raw mode values.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>rustix::fs::{Mode, RawMode};\n<span class=\"macro\">assert_eq!</span>(RawMode::from(Mode::RWXU), <span class=\"number\">0o700</span>);</code></pre></div>\n</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteHex-for-u32\" class=\"impl\"><a href=\"#impl-WriteHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_hex\" class=\"method trait-impl\"><a href=\"#method.write_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_hex</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Write the value as hex.</div></details></div></details>","WriteHex","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bits-for-u32\" class=\"impl\"><a href=\"#impl-Bits-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Bits for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EMPTY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EMPTY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>A value with all bits unset.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>A value with all bits set.</div></details></div></details>","Bits","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseHex-for-u32\" class=\"impl\"><a href=\"#impl-ParseHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ParseHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_hex\" class=\"method trait-impl\"><a href=\"#method.parse_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_hex</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, ParseError&gt;</h4></section></summary><div class='docblock'>Parse the value from hex.</div></details></div></details>","ParseHex","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoNotification-for-u32\" class=\"impl\"><a href=\"#impl-IntoNotification-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoNotification for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Tag\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Tag\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Tag</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The tag data associated with a notification. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Notify\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Notify\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Notify</a> = Notify</h4></section></summary><div class='docblock'>The notification type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_notification\" class=\"method trait-impl\"><a href=\"#method.into_notification\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_notification</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as IntoNotification&gt;::Notify</h4></section></summary><div class='docblock'>Convert this value into a notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.additional\" class=\"method trait-impl\"><a href=\"#method.additional\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">additional</a>(self) -&gt; Additional&lt;Self::Notify&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert this value into an additional notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relaxed\" class=\"method trait-impl\"><a href=\"#method.relaxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relaxed</a>(self) -&gt; Relaxed&lt;Self::Notify&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Don’t emit a fence for this notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: T) -&gt; Tag&lt;Self::Notify, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + IntoNotification&lt;Tag = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>Use a tag with this notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag_with\" class=\"method trait-impl\"><a href=\"#method.tag_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag_with</a>&lt;T, F&gt;(self, tag: F) -&gt; TagWith&lt;Self::Notify, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + IntoNotification&lt;Tag = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T,</div></h4></section></summary><div class='docblock'>Use a function to generate a tag with this notification. <a>Read more</a></div></details></div></details>","IntoNotification","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CDuration%3E-for-u32\" class=\"impl\"><a href=\"#impl-Mul%3CDuration%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Duration&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Duration</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: Duration) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Duration&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Duration>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-Integer-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.6/src/itoa/lib.rs.html#202-209\">source</a><a href=\"#impl-Integer-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/itoa/1.0.6/itoa/trait.Integer.html\" title=\"trait itoa::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Integer","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#impl-Mul%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26FixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#impl-Mul%3C%26FixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#919\">source</a><a href=\"#impl-LosslessTryFrom%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#919\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#595\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#595\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU128<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#915\">source</a><a href=\"#impl-LosslessTryFrom%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#915\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#impl-LosslessTryFrom%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#906\">source</a><a href=\"#impl-LosslessTryFrom%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#906\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#587\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#587\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI16<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#593\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#593\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU32<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#898\">source</a><a href=\"#impl-LosslessTryFrom%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#898\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#impl-LosslessTryFrom%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#impl-LosslessTryFrom%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cbool%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#impl-LosslessTryFrom%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<bool>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#589\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#589\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI64<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#904\">source</a><a href=\"#impl-LosslessTryFrom%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#904\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#896\">source</a><a href=\"#impl-LosslessTryFrom%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#896\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#592\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#592\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU16<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#588\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#588\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI32<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#591\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#591\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU8<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#594\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#594\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU64<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#586\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#586\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI8<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#917\">source</a><a href=\"#impl-LosslessTryFrom%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#917\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#902\">source</a><a href=\"#impl-LosslessTryFrom%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#902\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#900\">source</a><a href=\"#impl-LosslessTryFrom%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#900\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#590\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#590\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI128<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedBits-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBits-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html\" title=\"trait fixed::traits_bits::FixedBits\">FixedBits</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The smallest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>The largest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_SIGNED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.IS_SIGNED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.IS_SIGNED\" class=\"constant\">IS_SIGNED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if this integer type is signed.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 32u32</h4></section></summary><div class='docblock'>The size of this integer type in bits.</div></details></div></details>","FixedBits","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFixed-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#impl-FromFixed-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.from_fixed\" class=\"fn\">from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" title=\"associated function fixed::traits::FromFixed::wrapping_from_fixed\"><code>wrapping_from_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.checked_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.checked_from_fixed\" class=\"fn\">checked_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.saturating_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.saturating_from_fixed\" class=\"fn\">saturating_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, saturating if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.wrapping_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" class=\"fn\">wrapping_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, wrapping if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.overflowing_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.overflowing_from_fixed\" class=\"fn\">overflowing_from_fixed</a>&lt;F&gt;(src: F) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the value and a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.unwrapped_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#method.unwrapped_from_fixed\" class=\"fn\">unwrapped_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, panicking if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>Panics if the value\ndoes not fit, even when debug assertions are not enabled.</p>\n</div></details></div></details>","FromFixed","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsOptionalArbitrary-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalArbitrary-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalArbitrary.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalArbitrary\">FixedBitsOptionalArbitrary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalArbitrary","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#536\">source</a><a href=\"#impl-From%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#536\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU8<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#542\">source</a><a href=\"#impl-From%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#542\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU16<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#547\">source</a><a href=\"#impl-From%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#547\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU32<UTerm>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToFixed-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#impl-ToFixed-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.to_fixed\" class=\"fn\">to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" title=\"method fixed::traits::ToFixed::wrapping_to_fixed\"><code>wrapping_to_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.checked_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.checked_to_fixed\" class=\"fn\">checked_to_fixed</a>&lt;F&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.saturating_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.saturating_to_fixed\" class=\"fn\">saturating_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, saturating if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.wrapping_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" class=\"fn\">wrapping_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, wrapping if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.overflowing_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.overflowing_to_fixed\" class=\"fn\">overflowing_to_fixed</a>&lt;F&gt;(self) -&gt; (F, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On overflow, the\nwrapped value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.unwrapped_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#method.unwrapped_to_fixed\" class=\"fn\">unwrapped_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, panicking if it does not fit.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>Panics if the value does not fit, even when debug\nassertions are not enabled.</p>\n</div></details></div></details>","ToFixed","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsOptionalBorsh-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalBorsh-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalBorsh.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalBorsh\">FixedBitsOptionalBorsh</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalBorsh","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedEquiv-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#impl-FixedEquiv-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html\" title=\"trait fixed::traits::FixedEquiv\">FixedEquiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Equiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#associatedtype.Equiv\" class=\"associatedtype\">Equiv</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>The equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.to_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.to_fixed_equiv\" class=\"fn\">to_fixed_equiv</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts an owned value to the equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.as_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv\" class=\"fn\">as_fixed_equiv</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a reference into a reference to the equivalent fixed-point\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.as_fixed_equiv_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv_mut\" class=\"fn\">as_fixed_equiv_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a mutable reference into a mutable reference to the equivalent\nfixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.from_fixed_equiv\" class=\"fn\">from_fixed_equiv</a>(f: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts an owned equivalent fixed-point type to this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.ref_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.ref_from_fixed_equiv\" class=\"fn\">ref_from_fixed_equiv</a>(f: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts a reference to the equivalent fixed-point type into a reference\nto this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.mut_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.mut_from_fixed_equiv\" class=\"fn\">mut_from_fixed_equiv</a>(f: &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts a mutable reference to the equivalent fixed-point type into a\nmutable reference to this type.</div></details></div></details>","FixedEquiv","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#impl-LossyFrom%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#674\">source</a><a href=\"#impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#674\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU32<FracSrc>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cbool%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#impl-LossyFrom%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<bool>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#impl-LossyFrom%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#675\">source</a><a href=\"#impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#675\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU64<FracSrc>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#impl-LossyFrom%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#676\">source</a><a href=\"#impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#676\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU128<FracSrc>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#673\">source</a><a href=\"#impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#673\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU16<FracSrc>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#672\">source</a><a href=\"#impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#672\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU8<FracSrc>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsOptionalNum-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalNum-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalNum.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalNum\">FixedBitsOptionalNum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalNum","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsOptionalSerde-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalSerde-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalSerde.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalSerde\">FixedBitsOptionalSerde</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalSerde","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-FixedBitsCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI8<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI64<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU16<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU32<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI128<Frac>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#impl-UnwrappedCast%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u8>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<isize>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u16>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<usize>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i128>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u128>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#impl-UnwrappedCast%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i16>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i8>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u8>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<usize>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i128>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#impl-CheckedCast%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i8>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u16>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u128>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i16>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<isize>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#impl-CheckedCast%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i8>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<isize>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<usize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<isize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u16>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u8>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i16>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i128>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#impl-Cast%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u128>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i128>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<usize>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#impl-Cast%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i16>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u64>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u8>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TensorDataTypeTrait-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types/tensor_data.rs.html#224\">source</a><a href=\"#impl-TensorDataTypeTrait-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types/tensor_data/trait.TensorDataTypeTrait.html\" title=\"trait rerun::external::re_types::tensor_data::TensorDataTypeTrait\">TensorDataTypeTrait</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.DTYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/re_types/tensor_data.rs.html#225\">source</a><a href=\"#associatedconstant.DTYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/re_types/tensor_data/trait.TensorDataTypeTrait.html#associatedconstant.DTYPE\" class=\"constant\">DTYPE</a>: <a class=\"enum\" href=\"rerun/external/re_types/tensor_data/enum.TensorDataType.html\" title=\"enum rerun::external::re_types::tensor_data::TensorDataType\">TensorDataType</a> = TensorDataType::U32</h4></section></div></details>","TensorDataTypeTrait","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPrimitiveComponent%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types/testing/datatypes/primitive_component.rs.html#44\">source</a><a href=\"#impl-From%3CPrimitiveComponent%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"rerun/external/re_types/testing/datatypes/struct.PrimitiveComponent.html\" title=\"struct rerun::external::re_types::testing::datatypes::PrimitiveComponent\">PrimitiveComponent</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types/testing/datatypes/primitive_component.rs.html#46\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"rerun/external/re_types/testing/datatypes/struct.PrimitiveComponent.html\" title=\"struct rerun::external::re_types::testing::datatypes::PrimitiveComponent\">PrimitiveComponent</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PrimitiveComponent>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTensorDimensionIndexSlider%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types/blueprint/datatypes/tensor_dimension_index_slider.rs.html#47\">source</a><a href=\"#impl-From%3CTensorDimensionIndexSlider%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"rerun/external/re_types/blueprint/datatypes/struct.TensorDimensionIndexSlider.html\" title=\"struct rerun::external::re_types::blueprint::datatypes::TensorDimensionIndexSlider\">TensorDimensionIndexSlider</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types/blueprint/datatypes/tensor_dimension_index_slider.rs.html#49\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"rerun/external/re_types/blueprint/datatypes/struct.TensorDimensionIndexSlider.html\" title=\"struct rerun::external::re_types::blueprint::datatypes::TensorDimensionIndexSlider\">TensorDimensionIndexSlider</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TensorDimensionIndexSlider>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRgba32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types/datatypes/rgba32.rs.html#50\">source</a><a href=\"#impl-From%3CRgba32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"rerun/struct.Rgba32.html\" title=\"struct rerun::Rgba32\">Rgba32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types/datatypes/rgba32.rs.html#52\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"rerun/struct.Rgba32.html\" title=\"struct rerun::Rgba32\">Rgba32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rgba32>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ImageChannelType-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types/image.rs.html#132\">source</a><a href=\"#impl-ImageChannelType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/re_types/image/trait.ImageChannelType.html\" title=\"trait rerun::external::re_types::image::ImageChannelType\">ImageChannelType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.CHANNEL_TYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/re_types/image.rs.html#133\">source</a><a href=\"#associatedconstant.CHANNEL_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/re_types/image/trait.ImageChannelType.html#associatedconstant.CHANNEL_TYPE\" class=\"constant\">CHANNEL_TYPE</a>: <a class=\"enum\" href=\"rerun/enum.ChannelDatatype.html\" title=\"enum rerun::ChannelDatatype\">ChannelDatatype</a> = ChannelDatatype::U32</h4></section></summary><div class='docblock'>The <a href=\"rerun/enum.ChannelDatatype.html\" title=\"enum rerun::ChannelDatatype\"><code>ChannelDatatype</code></a> for this type.</div></details></div></details>","ImageChannelType","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumExt-for-u32\" class=\"impl\"><a href=\"#impl-NumExt-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/eframe/egui/trait.NumExt.html\" title=\"trait rerun::external::eframe::egui::NumExt\">NumExt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_least\" class=\"method trait-impl\"><a href=\"#method.at_least\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/eframe/egui/trait.NumExt.html#tymethod.at_least\" class=\"fn\">at_least</a>(self, lower_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>More readable version of <code>self.max(lower_limit)</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_most\" class=\"method trait-impl\"><a href=\"#method.at_most\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/eframe/egui/trait.NumExt.html#tymethod.at_most\" class=\"fn\">at_most</a>(self, upper_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>More readable version of <code>self.min(upper_limit)</code></div></details></div></details>","NumExt","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Numeric-for-u32\" class=\"impl\"><a href=\"#impl-Numeric-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/eframe/egui/epaint/emath/trait.Numeric.html\" title=\"trait rerun::external::eframe::egui::epaint::emath::Numeric\">Numeric</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.INTEGRAL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.INTEGRAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/eframe/egui/epaint/emath/trait.Numeric.html#associatedconstant.INTEGRAL\" class=\"constant\">INTEGRAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>Is this an integer type?</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/eframe/egui/epaint/emath/trait.Numeric.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>Smallest finite value</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/eframe/egui/epaint/emath/trait.Numeric.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>Largest finite value</div></details><section id=\"method.to_f64\" class=\"method trait-impl\"><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/eframe/egui/epaint/emath/trait.Numeric.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section><section id=\"method.from_f64\" class=\"method trait-impl\"><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/eframe/egui/epaint/emath/trait.Numeric.html#tymethod.from_f64\" class=\"fn\">from_f64</a>(num: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","Numeric","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#799\">source</a><a href=\"#impl-Rem%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#802\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<UVec3>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#710\">source</a><a href=\"#impl-Rem%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#713\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<UVec2>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#853\">source</a><a href=\"#impl-Rem%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#856\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<UVec4>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#583\">source</a><a href=\"#impl-Div%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#586\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UVec3>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#514\">source</a><a href=\"#impl-Div%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#517\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UVec2>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#617\">source</a><a href=\"#impl-Div%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#620\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UVec4>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#676\">source</a><a href=\"#impl-Mul%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#679\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UVec4>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#637\">source</a><a href=\"#impl-Mul%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#640\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UVec3>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#563\">source</a><a href=\"#impl-Mul%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#566\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UVec2>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#735\">source</a><a href=\"#impl-Add%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#738\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UVec4>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#691\">source</a><a href=\"#impl-Add%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#694\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UVec3>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#612\">source</a><a href=\"#impl-Add%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#615\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UVec2>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#745\">source</a><a href=\"#impl-Sub%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#748\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec3.html\" title=\"struct rerun::external::glam::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UVec3>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#661\">source</a><a href=\"#impl-Sub%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#664\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec2.html\" title=\"struct rerun::external::glam::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UVec2>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#794\">source</a><a href=\"#impl-Sub%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#797\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"rerun/external/glam/struct.UVec4.html\" title=\"struct rerun::external::glam::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UVec4>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Primitive-for-u32\" class=\"impl\"><a href=\"#impl-Primitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rerun/external/image/trait.Primitive.html\" title=\"trait rerun::external::image::Primitive\">Primitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT_MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.DEFAULT_MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/image/trait.Primitive.html#associatedconstant.DEFAULT_MAX_VALUE\" class=\"constant\">DEFAULT_MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>The maximum value for this type of primitive within the context of color.\nFor floats, the maximum is <code>1.0</code>, whereas the integer types inherit their usual maximum values.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT_MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.DEFAULT_MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"rerun/external/image/trait.Primitive.html#associatedconstant.DEFAULT_MIN_VALUE\" class=\"constant\">DEFAULT_MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The minimum value for this type of primitive within the context of color.\nFor floats, the minimum is <code>0.0</code>, whereas the integer types inherit their usual minimum values.</div></details></div></details>","Primitive","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Div%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Div%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Rem%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Rem%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shl%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shl%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitOr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitOr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Sub%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Sub%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-ScalarOperand-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#41\">source</a><a href=\"#impl-ScalarOperand-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/impl_ops/trait.ScalarOperand.html\" title=\"trait ndarray::impl_ops::ScalarOperand\">ScalarOperand</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","ScalarOperand","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitAnd%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitAnd%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Mul%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Mul%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Add%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Add%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitXor%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitXor%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(\n    self,\n    rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&'a ArrayBase<S, D>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Roots-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#impl-Roots-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html\" title=\"trait num_integer::roots::Roots\">Roots</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#method.nth_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\" class=\"fn\">nth_root</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the truncated principal <code>n</code>th root of an integer\n– <code>if x &gt;= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the truncated principal square root of an integer – <code>⌊√x⌋</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the truncated principal cube root of an integer –\n<code>if x &gt;= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\">Read more</a></div></details></div></details>","Roots","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#impl-Integer-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.div_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer division. Returns the same result as <code>div</code> (<code>/</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.mod_floor\" class=\"fn\">mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer modulo operation. Returns the same result as <code>rem</code> (<code>%</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.gcd\" class=\"fn\">gcd</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) of the number and <code>other</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.lcm\" class=\"fn\">lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Lowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.gcd_lcm\" class=\"fn\">gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.divides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.divides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.divides\" class=\"fn\">divides</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Deprecated, use <code>is_multiple_of</code> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.is_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is a multiple of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.is_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_even\" class=\"fn\">is_even</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_odd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.is_odd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_odd\" class=\"fn\">is_odd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is not divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Simultaneous truncated integer division and modulus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.div_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\" class=\"fn\">div_ceil</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Ceiled integer division. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.extended_gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd_lcm\" class=\"fn\">extended_gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Greatest common divisor, least common multiple, and Bézout coefficients.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#165-167\">source</a><a href=\"#method.extended_gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\" class=\"fn\">extended_gcd</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Greatest common divisor and Bézout coefficients. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#281\">source</a><a href=\"#method.div_mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\" class=\"fn\">div_mod_floor</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Self, Self)</a></h4></section></summary><div class='docblock'>Simultaneous floored integer division and modulus.\nReturns <code>(quotient, remainder)</code>. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#305-307\">source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\" class=\"fn\">next_multiple_of</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds up to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#338-340\">source</a><a href=\"#method.prev_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\" class=\"fn\">prev_multiple_of</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds down to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\">Read more</a></div></details></div></details>","Integer","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Mul%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Mul%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'a Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Sub%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Sub%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'a Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Div%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Div%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'a Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Rem%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&'a Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Rem%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Add%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Add%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Complex<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromData for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.113/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#impl-PartialEq%3CValue%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.113/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.113/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.113/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Codec-for-u32\" class=\"impl\"><a href=\"#impl-Codec-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Codec for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Function for encoding itself by appending itself to\nthe provided vec of bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read</a>(r: &amp;mut Reader&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, InvalidMessage&gt;</h4></section></summary><div class='docblock'>Function for decoding itself from the provided reader\nwill return Some if the decoding was successful or\nNone if it was not.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_encoding\" class=\"method trait-impl\"><a href=\"#method.get_encoding\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_encoding</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convenience function for encoding the implementation\ninto a vec and returning it</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_bytes\" class=\"method trait-impl\"><a href=\"#method.read_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, InvalidMessage&gt;</h4></section></summary><div class='docblock'>Function for wrapping a call to the read function in\na Reader for the slice of bytes provided</div></details></div></details>","Codec","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBigEndian%3Cu32%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBigEndian%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BigEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: BigEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BigEndian<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLittleEndian%3Cu32%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLittleEndian%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LittleEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: LittleEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LittleEndian<u32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAsciiChar-for-u32\" class=\"impl\"><a href=\"#impl-ToAsciiChar-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToAsciiChar for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_char\" class=\"method trait-impl\"><a href=\"#method.to_ascii_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_ascii_char</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsciiChar, ToAsciiCharError&gt;</h4></section></summary><div class='docblock'>Convert to <code>AsciiChar</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_char_unchecked\" class=\"method trait-impl\"><a href=\"#method.to_ascii_char_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">to_ascii_char_unchecked</a>(self) -&gt; AsciiChar</h4></section></summary><div class='docblock'>Convert to <code>AsciiChar</code> without checking that it is an ASCII character. <a>Read more</a></div></details></div></details>","ToAsciiChar","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Item-for-u32\" class=\"impl\"><a href=\"#impl-Item-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Item for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method trait-impl\"><a href=\"#method.from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_slice</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Create an object of this type from a byte slice.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Create an object of this type that represents a zero value.</div></details></div></details>","Item","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Validate-for-u32\" class=\"impl\"><a href=\"#impl-Validate-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Validate for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate</a>&lt;P, R&gt;(&amp;self, _root: &amp;Root, _path: P, _report: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut R</a>)<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; Path,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; Path, Error),</div></h4></section></summary><div class='docblock'>Validates the invariants required for the library to function safely.</div></details></div></details>","Validate","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitBlock-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#165-171\">source</a><a href=\"#impl-BitBlock-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html\" title=\"trait bit_vec::BitBlock\">BitBlock</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#165-171\">source</a><a href=\"#method.bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html#tymethod.bits\" class=\"fn\">bits</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>How many bits it has</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#165-171\">source</a><a href=\"#method.from_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html#tymethod.from_byte\" class=\"fn\">from_byte</a>(byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a byte into this type (lowest-order bits set)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#165-171\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Count the number of 1’s in the bitwise repr</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#165-171\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Get <code>1</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#165-171\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Get <code>0</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bit-vec/0.6.3/src/bit_vec/lib.rs.html#137\">source</a><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bit-vec/0.6.3/bit_vec/trait.BitBlock.html#method.bytes\" class=\"fn\">bytes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>How many bytes it has</div></details></div></details>","BitBlock","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3COrderedFloat%3Cf64%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-AsPrimitive%3COrderedFloat%3Cf64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;OrderedFloat&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; OrderedFloat&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<OrderedFloat<f64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3COrderedFloat%3Cf32%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-AsPrimitive%3COrderedFloat%3Cf32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;OrderedFloat&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; OrderedFloat&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<OrderedFloat<f32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3CNotNan%3Cf32%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-AsPrimitive%3CNotNan%3Cf32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;NotNan&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; NotNan&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<NotNan<f32>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3CNotNan%3Cf64%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-AsPrimitive%3CNotNan%3Cf64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;NotNan&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; NotNan&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<NotNan<f64>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pixel-for-u32\" class=\"impl\"><a href=\"#impl-Pixel-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pixel for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_f64\" class=\"method trait-impl\"><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_f64</a>(f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cast\" class=\"method trait-impl\"><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    P: Pixel,</div></h4></section></div></details>","Pixel","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeysym%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeysym%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Keysym&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(keysym: Keysym) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Keysym>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyCode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeyCode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KeyCode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(keycode: KeyCode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyCode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWEnum%3CT%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CWEnum%3CT%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WEnum&lt;T&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(enu: WEnum&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts an enum into a numerical form used by the wayland protocol.</p>\n</div></details></div></details>","From<WEnum<T>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTransform%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTransform%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Transform&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Transform) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Transform>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFormat%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFormat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Format&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Format) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Format>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTransient%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTransient%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Transient&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Transient) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Transient>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAxisRelativeDirection%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAxisRelativeDirection%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AxisRelativeDirection&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: AxisRelativeDirection) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AxisRelativeDirection>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAxis%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAxis%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Axis&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Axis) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Axis>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeyState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KeyState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: KeyState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeymapFormat%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeymapFormat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KeymapFormat&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: KeymapFormat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeymapFormat>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFullscreenMethod%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFullscreenMethod%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FullscreenMethod&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: FullscreenMethod) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FullscreenMethod>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CButtonState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ButtonState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ButtonState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAxisSource%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAxisSource%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AxisSource&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: AxisSource) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AxisSource>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CResize%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CResize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Resize&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Resize) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Resize>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDndAction%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDndAction%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DndAction&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: DndAction) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DndAction>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Capability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Capability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Capability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubpixel%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSubpixel%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Subpixel&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Subpixel) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Subpixel>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTrancheFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTrancheFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TrancheFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: TrancheFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TrancheFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Flags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Flags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Flags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLifetime%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLifetime%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Lifetime&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Lifetime) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Lifetime>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CButtonState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ButtonState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ButtonState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPreeditStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPreeditStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PreeditStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PreeditStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PreeditStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPresentationHint%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPresentationHint%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PresentationHint&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PresentationHint) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PresentationHint>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CButtonState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ButtonState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ButtonState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Capability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Capability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Capability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPresentMethod%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPresentMethod%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PresentMethod&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PresentMethod) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PresentMethod>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPosition%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPosition%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Position&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Position) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Position>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Capability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Capability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Capability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CShape%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CShape%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Shape&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Shape) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Shape>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;State&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: State) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<State>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWmCapabilities%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CWmCapabilities%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WmCapabilities&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: WmCapabilities) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WmCapabilities>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKind%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKind%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Kind&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Kind) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Kind>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentPurpose%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentPurpose%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentPurpose&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentPurpose) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentPurpose>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSource%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSource%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Source&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Source) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Source>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CButtonState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ButtonState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ButtonState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGravity%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGravity%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Gravity&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Gravity) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Gravity>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Type&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Type) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Type>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Capability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Capability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Capability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentHint%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentHint%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentHint&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentHint) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentHint>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CResizeEdge%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CResizeEdge%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ResizeEdge&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ResizeEdge) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ResizeEdge>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAnchor%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAnchor%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Anchor&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Anchor) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Anchor>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConstraintAdjustment%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CConstraintAdjustment%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ConstraintAdjustment&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ConstraintAdjustment) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ConstraintAdjustment>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Type&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Type) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Type>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSource%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSource%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Source&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Source) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Source>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Type&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Type) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Type>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentHint%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentHint%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentHint&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentHint) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentHint>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeCause%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CChangeCause%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChangeCause&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ChangeCause) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeCause>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTextDirection%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTextDirection%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TextDirection&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: TextDirection) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TextDirection>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentPurpose%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentPurpose%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentPurpose&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentPurpose) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentPurpose>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;State&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: State) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<State>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAdaptiveSyncState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAdaptiveSyncState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AdaptiveSyncState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: AdaptiveSyncState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AdaptiveSyncState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCancelReason%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCancelReason%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CancelReason&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: CancelReason) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CancelReason>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAnchor%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAnchor%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Anchor&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Anchor) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Anchor>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Flags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Flags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Flags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyboardInteractivity%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeyboardInteractivity%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KeyboardInteractivity&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: KeyboardInteractivity) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyboardInteractivity>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLayer%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLayer%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Layer&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Layer) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Layer>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Flags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Flags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Flags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentHint%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentHint%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentHint&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentHint) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentHint>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentPurpose%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentPurpose%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentPurpose&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentPurpose) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentPurpose>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Capability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Capability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Capability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTransform%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTransform%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Transform&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Transform) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Transform>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInputPanelVisibility%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CInputPanelVisibility%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;InputPanelVisibility&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: InputPanelVisibility) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InputPanelVisibility>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTransform%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTransform%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Transform&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Transform) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Transform>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLocation%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLocation%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Location&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Location) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Location>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubpixel%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSubpixel%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Subpixel&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Subpixel) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Subpixel>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRole%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRole%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Role&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Role) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Role>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVrrPolicy%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVrrPolicy%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VrrPolicy&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: VrrPolicy) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VrrPolicy>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRgbRange%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRgbRange%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RgbRange&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: RgbRange) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RgbRange>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubpixel%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSubpixel%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Subpixel&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Subpixel) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Subpixel>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUpdateState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CUpdateState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;UpdateState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: UpdateState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UpdateState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentPurpose%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentPurpose%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentPurpose&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentPurpose) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentPurpose>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTextDirection%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTextDirection%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TextDirection&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: TextDirection) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TextDirection>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKey%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKey%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Key&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Key) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Key>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRgbRange%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRgbRange%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RgbRange&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: RgbRange) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RgbRange>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CContentHint%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CContentHint%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ContentHint&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ContentHint) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ContentHint>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAttrib%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAttrib%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Attrib&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Attrib) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Attrib>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVrrPolicy%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVrrPolicy%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VrrPolicy&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: VrrPolicy) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VrrPolicy>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPanelBehavior%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPanelBehavior%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PanelBehavior&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PanelBehavior) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PanelBehavior>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPreeditStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPreeditStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PreeditStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PreeditStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PreeditStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CShowDesktop%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CShowDesktop%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ShowDesktop&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: ShowDesktop) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ShowDesktop>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Capability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Capability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Capability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPresentMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPresentMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PresentMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PresentMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PresentMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVrrPolicy%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVrrPolicy%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VrrPolicy&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: VrrPolicy) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VrrPolicy>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTextDirection%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTextDirection%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TextDirection&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: TextDirection) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TextDirection>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPreeditStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPreeditStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PreeditStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: PreeditStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PreeditStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVrrPolicy%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVrrPolicy%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VrrPolicy&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: VrrPolicy) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VrrPolicy>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;State&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: State) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<State>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPointer%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPointer%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Pointer&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Pointer) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Pointer>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;State&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: State) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<State>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEnablement%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CEnablement%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Enablement&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Enablement) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Enablement>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26CursorWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26CursorWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;CursorWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;CursorWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&CursorWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26GlyphsetWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26GlyphsetWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;GlyphsetWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;GlyphsetWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&GlyphsetWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26GcontextWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26GcontextWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;GcontextWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;GcontextWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&GcontextWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26PixmapWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26PixmapWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;PixmapWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;PixmapWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&PixmapWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26WindowWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26WindowWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;WindowWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;WindowWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&WindowWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26RegionWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26RegionWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;RegionWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;RegionWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&RegionWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26FontWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26FontWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;FontWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;FontWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&FontWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26ColormapWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26ColormapWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;ColormapWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;ColormapWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&ColormapWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26PictureWrapper%3CC%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3C%26PictureWrapper%3CC%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;PictureWrapper&lt;C&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    C: RequestConnection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(from: &amp;PictureWrapper&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&PictureWrapper<C>>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u32\" class=\"impl\"><a href=\"#impl-Serialize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Serialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as Serialize&gt;::Bytes</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a>Read more</a></div></details></div></details>","Serialize","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;PointerEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = PointerEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: PointerEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;PointerEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<PointerEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CModeFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ModeFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ModeFlag</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: ModeFlag) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ModeFlag&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ModeFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CXIEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;XIEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = XIEventMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: XIEventMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;XIEventMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<XIEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;GestureSwipeEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = GestureSwipeEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: GestureSwipeEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;GestureSwipeEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<GestureSwipeEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CModifierMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ModifierMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ModifierMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: ModifierMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ModifierMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ModifierMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;CursorNotifyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = CursorNotifyMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: CursorNotifyMask\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;CursorNotifyMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<CursorNotifyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CGC%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;GC&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = GC</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: GC) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;GC&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<GC>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;SelectionEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = SelectionEventMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: SelectionEventMask\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;SelectionEventMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<SelectionEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;PerClientFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = PerClientFlag</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: PerClientFlag) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;PerClientFlag&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<PerClientFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;BarrierDirections&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BarrierDirections</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: BarrierDirections\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;BarrierDirections&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<BarrierDirections>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CNameDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;NameDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = NameDetail</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: NameDetail) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;NameDetail&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<NameDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;HierarchyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = HierarchyMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: HierarchyMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;HierarchyMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<HierarchyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Control&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Control</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: Control) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Control&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Control>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CKB%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;KB&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = KB</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: KB) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;KB&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<KB>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;KeyEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = KeyEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: KeyEventFlags) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;KeyEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<KeyEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CCP%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;CP&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = CP</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: CP) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;CP&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<CP>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;BoolCtrl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BoolCtrl</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: BoolCtrl) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;BoolCtrl&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<BoolCtrl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CScrollFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ScrollFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ScrollFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: ScrollFlags) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ScrollFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ScrollFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ChangeFeedbackControlMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ChangeFeedbackControlMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: ChangeFeedbackControlMask\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ChangeFeedbackControlMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ChangeFeedbackControlMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CCW%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;CW&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = CW</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: CW) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;CW&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<CW>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;GesturePinchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = GesturePinchEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: GesturePinchEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;GesturePinchEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<GesturePinchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;TouchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = TouchEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: TouchEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;TouchEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<TouchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CProviderCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ProviderCapability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProviderCapability</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: ProviderCapability\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ProviderCapability&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ProviderCapability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;EventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = EventMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: EventMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;EventMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<EventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;BarrierFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BarrierFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: BarrierFlags) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;BarrierFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<BarrierFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAnd%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ClientDisconnectFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ClientDisconnectFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    other: ClientDisconnectFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;ClientDisconnectFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ClientDisconnectFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;PerClientFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: PerClientFlag)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<PerClientFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CModifierMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;ModifierMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: ModifierMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ModifierMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CKB%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;KB&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: KB)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<KB>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;PointerEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: PointerEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<PointerEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CCP%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;CP&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: CP)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<CP>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;BarrierDirections&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: BarrierDirections)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<BarrierDirections>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;ChangeFeedbackControlMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: ChangeFeedbackControlMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ChangeFeedbackControlMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CScrollFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;ScrollFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: ScrollFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ScrollFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;ClientDisconnectFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: ClientDisconnectFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ClientDisconnectFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;KeyEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: KeyEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<KeyEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;SelectionEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: SelectionEventMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<SelectionEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;GesturePinchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: GesturePinchEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<GesturePinchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;BoolCtrl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: BoolCtrl)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<BoolCtrl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;GestureSwipeEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: GestureSwipeEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<GestureSwipeEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CProviderCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;ProviderCapability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: ProviderCapability)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ProviderCapability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;HierarchyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: HierarchyMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<HierarchyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CGC%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;GC&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: GC)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<GC>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;EventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: EventMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<EventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Control&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: Control)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<Control>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CCW%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;CW&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: CW)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<CW>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;BarrierFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: BarrierFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<BarrierFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CNameDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;NameDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: NameDetail)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<NameDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CXIEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;XIEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: XIEventMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<XIEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;CursorNotifyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: CursorNotifyMask)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<CursorNotifyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;TouchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: TouchEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<TouchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CModeFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;ModeFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: ModeFlag)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ModeFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-u32\" class=\"impl\"><a href=\"#impl-TryParse-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TryParse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_parse</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]), ParseError&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a>Read more</a></div></details></div></details>","TryParse","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;ChangeFeedbackControlMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: ChangeFeedbackControlMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ChangeFeedbackControlMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CGC%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;GC&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: GC)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<GC>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;BarrierFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: BarrierFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<BarrierFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CXIEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;XIEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: XIEventMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<XIEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CScrollFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;ScrollFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: ScrollFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ScrollFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;KeyEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: KeyEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<KeyEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CModeFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;ModeFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: ModeFlag)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ModeFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;SelectionEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: SelectionEventMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<SelectionEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;BoolCtrl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: BoolCtrl)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<BoolCtrl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;GesturePinchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: GesturePinchEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<GesturePinchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;BarrierDirections&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: BarrierDirections)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<BarrierDirections>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;ClientDisconnectFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: ClientDisconnectFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ClientDisconnectFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CProviderCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;ProviderCapability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: ProviderCapability)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ProviderCapability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;TouchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: TouchEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<TouchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;PointerEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: PointerEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<PointerEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CModifierMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;ModifierMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: ModifierMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ModifierMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CCP%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;CP&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: CP)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<CP>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CCW%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;CW&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: CW)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<CW>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CNameDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;NameDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: NameDetail)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<NameDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;EventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: EventMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<EventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;CursorNotifyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: CursorNotifyMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<CursorNotifyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;PerClientFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: PerClientFlag)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<PerClientFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;HierarchyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: HierarchyMask)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<HierarchyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;GestureSwipeEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: GestureSwipeEventFlags)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<GestureSwipeEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CKB%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;KB&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: KB)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<KB>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;Control&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: Control)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<Control>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GestureSwipeEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GestureSwipeEventFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GestureSwipeEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLockDeviceFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLockDeviceFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LockDeviceFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: LockDeviceFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LockDeviceFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGrabMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrabMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GrabMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWindowEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CWindowEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WindowEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: WindowEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WindowEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModifierMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ModifierMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ModifierMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModifierMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColormapState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CColormapState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ColormapState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ColormapState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColormapState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubPixel%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSubPixel%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SubPixel&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SubPixel) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SubPixel>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBehaviorType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBehaviorType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BehaviorType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BehaviorType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BehaviorType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCP%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CP&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CP) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CP>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CEventMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;EventMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: EventMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CActionMessageFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CActionMessageFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ActionMessageFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ActionMessageFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ActionMessageFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPictureEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPictureEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PictureEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PictureEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PictureEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropertyFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPropertyFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PropertyFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PropertyFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropertyFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapping%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMapping%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mapping&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Mapping) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mapping>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSO%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSO%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SO&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SO) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SO>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFontDraw%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFontDraw%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FontDraw&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: FontDraw) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FontDraw>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CScreenSaver%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CScreenSaver%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ScreenSaver&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ScreenSaver) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ScreenSaver>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCursorEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCursorEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CursorEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CursorEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CursorEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLedClassResult%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLedClassResult%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LedClassResult&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: LedClassResult) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LedClassResult>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGrabType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrabType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GrabType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ClientDisconnectFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ClientDisconnectFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ClientDisconnectFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVModsHigh%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVModsHigh%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VModsHigh&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: VModsHigh) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VModsHigh>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KeyEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: KeyEventFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CImageOrder%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CImageOrder%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ImageOrder&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ImageOrder) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ImageOrder>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPropMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PropMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PropMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CXIEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;XIEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: XIEventMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<XIEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVModsLow%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVModsLow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VModsLow&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: VModsLow) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VModsLow>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabStatus%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGrabStatus%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrabStatus&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GrabStatus) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabStatus>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColormapAlloc%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CColormapAlloc%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ColormapAlloc&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ColormapAlloc) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColormapAlloc>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SelectionEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SelectionEventMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SelectionEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCloseDown%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCloseDown%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CloseDown&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CloseDown) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CloseDown>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVMod%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVMod%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VMod&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: VMod) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VMod>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CScrollFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ScrollFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ScrollFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ScrollFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConnection%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CConnection%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Connection&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Connection) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Connection>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSK%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSK%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SK&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SK) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SK>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNotifyMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NotifyMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NotifyMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Error) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNotifyMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NotifyMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NotifyMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrab%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGrab%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Grab&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Grab) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Grab>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMotion%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMotion%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Motion&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Motion) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Motion>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyButMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKeyButMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KeyButMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: KeyButMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyButMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProviderCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ProviderCapability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ProviderCapability) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ProviderCapability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConfigWindow%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CConfigWindow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ConfigWindow&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ConfigWindow) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ConfigWindow>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSymInterpMatch%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSymInterpMatch%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SymInterpMatch&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SymInterpMatch) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SymInterpMatch>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTouchMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTouchMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TouchMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: TouchMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TouchMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInputClass%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CInputClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;InputClass&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: InputClass) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InputClass>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBellClass%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBellClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BellClass&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BellClass) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BellClass>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBackingStore%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBackingStore%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BackingStore&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BackingStore) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BackingStore>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSwitchScreenFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSwitchScreenFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SwitchScreenFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SwitchScreenFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SwitchScreenFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CImageFormat%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CImageFormat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ImageFormat&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ImageFormat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ImageFormat>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMappingStatus%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMappingStatus%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MappingStatus&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: MappingStatus) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MappingStatus>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BarrierFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BarrierFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BarrierFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CJoinStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CJoinStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;JoinStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: JoinStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<JoinStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapState%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMapState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MapState&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: MapState) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MapState>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSendEventDest%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSendEventDest%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SendEventDest&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SendEventDest) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SendEventDest>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGroupsWrap%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGroupsWrap%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GroupsWrap&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GroupsWrap) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GroupsWrap>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetConfig%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSetConfig%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SetConfig&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SetConfig) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetConfig>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CExplicit%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CExplicit%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Explicit&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Explicit) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Explicit>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetOfGroups%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSetOfGroups%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SetOfGroups&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SetOfGroups) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetOfGroups>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaveSetMapping%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSaveSetMapping%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SaveSetMapping&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SaveSetMapping) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaveSetMapping>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGroup%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGroup%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Group&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Group) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Group>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAXNDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAXNDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AXNDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: AXNDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AXNDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBackPixmap%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBackPixmap%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BackPixmap&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BackPixmap) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BackPixmap>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CValuatorMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CValuatorMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ValuatorMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ValuatorMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ValuatorMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColormapEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CColormapEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ColormapEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ColormapEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColormapEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWindowClass%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CWindowClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WindowClass&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: WindowClass) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WindowClass>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetOfGroup%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSetOfGroup%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SetOfGroup&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SetOfGroup) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetOfGroup>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAtomEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAtomEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AtomEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: AtomEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AtomEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNameDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NameDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NameDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NameDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Control&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Control) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Control>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceClassType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDeviceClassType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DeviceClassType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DeviceClassType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceClassType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIMModsWhich%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CIMModsWhich%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;IMModsWhich&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: IMModsWhich) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IMModsWhich>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CEventType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;EventType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: EventType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSelectionEvent%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSelectionEvent%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SelectionEvent&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SelectionEvent) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SelectionEvent>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CChangeMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChangeMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ChangeMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModifierDevice%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CModifierDevice%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ModifierDevice&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ModifierDevice) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModifierDevice>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HierarchyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: HierarchyMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HierarchyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConst%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CConst%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Const&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Const) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Const>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceUse%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDeviceUse%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DeviceUse&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DeviceUse) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceUse>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGC%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GC&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GC) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GC>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSetMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SetMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SetMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGBNDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGBNDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GBNDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GBNDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GBNDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDevice%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDevice%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Device&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Device) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Device>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceInputMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDeviceInputMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DeviceInputMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DeviceInputMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceInputMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLineStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLineStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LineStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: LineStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LineStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGravity%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGravity%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Gravity&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Gravity) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Gravity>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInputFocus%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CInputFocus%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;InputFocus&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: InputFocus) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InputFocus>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRegionEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRegionEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RegionEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: RegionEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RegionEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAMovePtrFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSAMovePtrFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SAMovePtrFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SAMovePtrFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAMovePtrFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GesturePinchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GesturePinchEventFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GesturePinchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRotation%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRotation%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Rotation&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Rotation) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rotation>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHierarchyChangeType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CHierarchyChangeType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HierarchyChangeType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: HierarchyChangeType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HierarchyChangeType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeReason%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CChangeReason%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChangeReason&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ChangeReason) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeReason>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVisibility%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVisibility%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Visibility&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Visibility) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Visibility>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BarrierDirections&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BarrierDirections) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BarrierDirections>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFontEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFontEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FontEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: FontEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FontEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CClipOrdering%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CClipOrdering%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ClipOrdering&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ClipOrdering) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ClipOrdering>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCapStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CapStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CapStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CapStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIMGroupsWhich%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CIMGroupsWhich%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;IMGroupsWhich&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: IMGroupsWhich) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IMGroupsWhich>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBoolCtrlsHigh%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBoolCtrlsHigh%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BoolCtrlsHigh&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BoolCtrlsHigh) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BoolCtrlsHigh>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBlanking%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBlanking%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Blanking&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Blanking) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Blanking>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCW%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CW&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CW) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CW>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CButtonMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ButtonMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ButtonMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColorFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CColorFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ColorFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ColorFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColorFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProperty%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CProperty%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Property&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Property) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Property>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAccessControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAccessControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AccessControl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: AccessControl) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AccessControl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPixmapEnum%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPixmapEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PixmapEnum&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PixmapEnum) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PixmapEnum>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCirculate%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCirculate%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Circulate&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Circulate) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Circulate>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CursorNotifyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CursorNotifyMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CursorNotifyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropertyFormat%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPropertyFormat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PropertyFormat&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PropertyFormat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropertyFormat>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDoodadType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDoodadType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DoodadType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DoodadType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DoodadType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TouchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: TouchEventFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TouchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTouchOwnershipFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTouchOwnershipFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TouchOwnershipFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: TouchOwnershipFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TouchOwnershipFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCoordMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCoordMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CoordMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CoordMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CoordMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTransform%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTransform%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Transform&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Transform) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Transform>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNotifyDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NotifyDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NotifyDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabMode22%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGrabMode22%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrabMode22&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GrabMode22) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabMode22>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaveSetMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSaveSetMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SaveSetMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SaveSetMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaveSetMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChangeFeedbackControlMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ChangeFeedbackControlMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeFeedbackControlMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropagateMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPropagateMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PropagateMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PropagateMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropagateMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFeedbackClass%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFeedbackClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FeedbackClass&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: FeedbackClass) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FeedbackClass>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceChange%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDeviceChange%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DeviceChange&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DeviceChange) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceChange>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CID%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CID%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ID&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ID) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ID>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModeFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ModeFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ModeFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModeFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPlace%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPlace%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Place&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Place) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Place>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSAType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SAType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SAType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubwindowMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSubwindowMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SubwindowMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SubwindowMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SubwindowMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAllow%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAllow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Allow&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Allow) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Allow>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDeviceType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DeviceType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DeviceType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CQueryShapeOf%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CQueryShapeOf%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;QueryShapeOf&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: QueryShapeOf) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<QueryShapeOf>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CExposures%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CExposures%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Exposures&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Exposures) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Exposures>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;EventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: EventMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKB%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KB&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: KB) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KB>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCursorNotify%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCursorNotify%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CursorNotify&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CursorNotify) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CursorNotify>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotify%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNotify%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Notify&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Notify) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Notify>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHostMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CHostMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HostMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: HostMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HostMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGroups%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGroups%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Groups&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Groups) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Groups>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPolyShape%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPolyShape%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PolyShape&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PolyShape) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PolyShape>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFillStyle%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFillStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FillStyle&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: FillStyle) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FillStyle>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CClassesReportedMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CClassesReportedMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ClassesReportedMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ClassesReportedMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ClassesReportedMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBoolCtrlsLow%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBoolCtrlsLow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BoolCtrlsLow&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BoolCtrlsLow) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BoolCtrlsLow>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapIndex%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMapIndex%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MapIndex&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: MapIndex) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MapIndex>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonIndex%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CButtonIndex%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ButtonIndex&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ButtonIndex) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonIndex>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVisualClass%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CVisualClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VisualClass&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: VisualClass) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VisualClass>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaveSetTarget%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSaveSetTarget%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SaveSetTarget&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SaveSetTarget) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaveSetTarget>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTime%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTime%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Time&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Time) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Time>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CScrollType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CScrollType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ScrollType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ScrollType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ScrollType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLedMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLedMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LedMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: LedMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LedMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeDevice%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CChangeDevice%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChangeDevice&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ChangeDevice) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeDevice>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CXIFeature%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CXIFeature%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;XIFeature&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: XIFeature) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<XIFeature>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAXOption%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAXOption%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AXOption&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: AXOption) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AXOption>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPolyEdge%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPolyEdge%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PolyEdge&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PolyEdge) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PolyEdge>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BoolCtrl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BoolCtrl) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BoolCtrl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGX%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGX%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GX&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GX) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GX>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNotifyDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NotifyDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NotifyDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabOwner%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGrabOwner%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrabOwner&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GrabOwner) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabOwner>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNKNDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNKNDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NKNDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NKNDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NKNDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CArcMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CArcMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ArcMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ArcMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ArcMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CModMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ModMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ModMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PerClientFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PerClientFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PerClientFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CStatePart%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CStatePart%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;StatePart&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: StatePart) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<StatePart>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CDeviceControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DeviceControl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: DeviceControl) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceControl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSASetPtrDfltFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSASetPtrDfltFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SASetPtrDfltFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SASetPtrDfltFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SASetPtrDfltFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPictType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPictType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PictType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PictType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PictType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPictOp%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPictOp%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PictOp&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PictOp) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PictOp>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKill%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CKill%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Kill&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Kill) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Kill>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapPart%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMapPart%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MapPart&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: MapPart) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MapPart>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CStackMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CStackMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;StackMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: StackMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<StackMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPolyMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPolyMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PolyMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PolyMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PolyMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRepeat%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRepeat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Repeat&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Repeat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Repeat>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PointerEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: PointerEventFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PointerEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAutoRepeatMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CAutoRepeatMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AutoRepeatMode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: AutoRepeatMode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AutoRepeatMode>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIMFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CIMFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;IMFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: IMFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IMFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFamily%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFamily%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Family&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: Family) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Family>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMoreEventsMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMoreEventsMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MoreEventsMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: MoreEventsMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MoreEventsMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAValWhat%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSAValWhat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SAValWhat&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SAValWhat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAValWhat>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAIsoLockNoAffect%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSAIsoLockNoAffect%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SAIsoLockNoAffect&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SAIsoLockNoAffect) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAIsoLockNoAffect>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetMapFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSetMapFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SetMapFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SetMapFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetMapFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLedClass%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLedClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LedClass&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: LedClass) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LedClass>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBellClassResult%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBellClassResult%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BellClassResult&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: BellClassResult) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BellClassResult>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSA%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSA%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SA&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SA) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SA>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCMDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CCMDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CMDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: CMDetail) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CMDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSymInterpretMatch%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSymInterpretMatch%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SymInterpretMatch&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SymInterpretMatch) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SymInterpretMatch>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NotifyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: NotifyMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFillRule%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CFillRule%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FillRule&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: FillRule) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FillRule>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAIsoLockFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CSAIsoLockFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SAIsoLockFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: SAIsoLockFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAIsoLockFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGetPropertyType%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGetPropertyType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GetPropertyType&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: GetPropertyType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GetPropertyType>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CValuatorStateModeMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CValuatorStateModeMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ValuatorStateModeMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: ValuatorStateModeMask) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ValuatorStateModeMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNameDetail%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;NameDetail&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = NameDetail</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: NameDetail) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;NameDetail&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NameDetail>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;KeyEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = KeyEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: KeyEventFlags) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;KeyEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<KeyEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;HierarchyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = HierarchyMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: HierarchyMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;HierarchyMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<HierarchyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CModifierMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ModifierMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ModifierMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: ModifierMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ModifierMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ModifierMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;SelectionEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = SelectionEventMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: SelectionEventMask\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;SelectionEventMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<SelectionEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;BoolCtrl&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BoolCtrl</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: BoolCtrl) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;BoolCtrl&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<BoolCtrl>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;GesturePinchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = GesturePinchEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: GesturePinchEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;GesturePinchEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<GesturePinchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ClientDisconnectFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ClientDisconnectFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: ClientDisconnectFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ClientDisconnectFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ClientDisconnectFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;BarrierDirections&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BarrierDirections</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: BarrierDirections\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;BarrierDirections&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<BarrierDirections>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CScrollFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ScrollFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ScrollFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: ScrollFlags) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ScrollFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ScrollFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;CursorNotifyMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = CursorNotifyMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: CursorNotifyMask\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;CursorNotifyMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<CursorNotifyMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;PerClientFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = PerClientFlag</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: PerClientFlag) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;PerClientFlag&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<PerClientFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CCW%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;CW&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = CW</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: CW) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;CW&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<CW>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;PointerEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = PointerEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: PointerEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;PointerEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<PointerEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CCP%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;CP&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = CP</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: CP) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;CP&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<CP>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;EventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = EventMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: EventMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;EventMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<EventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CProviderCapability%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ProviderCapability&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProviderCapability</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: ProviderCapability\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ProviderCapability&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ProviderCapability>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;GestureSwipeEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = GestureSwipeEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: GestureSwipeEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;GestureSwipeEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<GestureSwipeEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CControl%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Control&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Control</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: Control) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Control&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Control>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CKB%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;KB&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = KB</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: KB) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;KB&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<KB>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;BarrierFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BarrierFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: BarrierFlags) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;BarrierFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<BarrierFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CGC%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;GC&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = GC</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: GC) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;GC&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<GC>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ChangeFeedbackControlMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ChangeFeedbackControlMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: ChangeFeedbackControlMask\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ChangeFeedbackControlMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ChangeFeedbackControlMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CXIEventMask%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;XIEventMask&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = XIEventMask</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: XIEventMask) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;XIEventMask&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<XIEventMask>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;TouchEventFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = TouchEventFlags</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    other: TouchEventFlags\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;TouchEventFlags&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<TouchEventFlags>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CModeFlag%3E-for-u32\" class=\"impl\"><a href=\"#impl-BitOr%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ModeFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ModeFlag</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: ModeFlag) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;ModeFlag&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ModeFlag>","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VectorFromWasmAbi-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/slices.rs.html#222-224\">source</a><a href=\"#impl-VectorFromWasmAbi-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.VectorFromWasmAbi.html\" title=\"trait wasm_bindgen::convert::traits::VectorFromWasmAbi\">VectorFromWasmAbi</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Abi\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Abi\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.VectorFromWasmAbi.html#associatedtype.Abi\" class=\"associatedtype\">Abi</a> = <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/slices/struct.WasmSlice.html\" title=\"struct wasm_bindgen::convert::slices::WasmSlice\">WasmSlice</a></h4></section><section id=\"method.vector_from_abi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/slices.rs.html#222-224\">source</a><a href=\"#method.vector_from_abi\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.VectorFromWasmAbi.html#tymethod.vector_from_abi\" class=\"fn\">vector_from_abi</a>(js: <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/slices/struct.WasmSlice.html\" title=\"struct wasm_bindgen::convert::slices::WasmSlice\">WasmSlice</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>]&gt;</h4></section></div></details>","VectorFromWasmAbi","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VectorIntoWasmAbi-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/slices.rs.html#222-224\">source</a><a href=\"#impl-VectorIntoWasmAbi-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.VectorIntoWasmAbi.html\" title=\"trait wasm_bindgen::convert::traits::VectorIntoWasmAbi\">VectorIntoWasmAbi</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Abi\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Abi\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.VectorIntoWasmAbi.html#associatedtype.Abi\" class=\"associatedtype\">Abi</a> = <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/slices/struct.WasmSlice.html\" title=\"struct wasm_bindgen::convert::slices::WasmSlice\">WasmSlice</a></h4></section><section id=\"method.vector_into_abi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/slices.rs.html#222-224\">source</a><a href=\"#method.vector_into_abi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.VectorIntoWasmAbi.html#tymethod.vector_into_abi\" class=\"fn\">vector_into_abi</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>]&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/slices/struct.WasmSlice.html\" title=\"struct wasm_bindgen::convert::slices::WasmSlice\">WasmSlice</a></h4></section></div></details>","VectorIntoWasmAbi","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromWasmAbi-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/impls.rs.html#104-113\">source</a><a href=\"#impl-FromWasmAbi-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.FromWasmAbi.html\" title=\"trait wasm_bindgen::convert::traits::FromWasmAbi\">FromWasmAbi</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Abi\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Abi\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.FromWasmAbi.html#associatedtype.Abi\" class=\"associatedtype\">Abi</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The wasm ABI type that this converts from when coming back out from the\nABI boundary.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_abi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/impls.rs.html#104-113\">source</a><a href=\"#method.from_abi\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.FromWasmAbi.html#tymethod.from_abi\" class=\"fn\">from_abi</a>(js: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Recover a <code>Self</code> from <code>Self::Abi</code>. <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.FromWasmAbi.html#tymethod.from_abi\">Read more</a></div></details></div></details>","FromWasmAbi","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWasmAbi-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/impls.rs.html#104-113\">source</a><a href=\"#impl-IntoWasmAbi-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.IntoWasmAbi.html\" title=\"trait wasm_bindgen::convert::traits::IntoWasmAbi\">IntoWasmAbi</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Abi\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Abi\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.IntoWasmAbi.html#associatedtype.Abi\" class=\"associatedtype\">Abi</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The wasm ABI type that this converts into when crossing the ABI\nboundary.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_abi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/impls.rs.html#104-113\">source</a><a href=\"#method.into_abi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.IntoWasmAbi.html#tymethod.into_abi\" class=\"fn\">into_abi</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> into <code>Self::Abi</code> so that it can be sent across the wasm\nABI boundary.</div></details></div></details>","IntoWasmAbi","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<section id=\"impl-WasmPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasm-bindgen/0.2/src/wasm_bindgen/convert/traits.rs.html#133\">source</a><a href=\"#impl-WasmPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/convert/traits/trait.WasmPrimitive.html\" title=\"trait wasm_bindgen::convert::traits::WasmPrimitive\">WasmPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WasmPrimitive","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateID-for-u32\" class=\"impl\"><a href=\"#impl-StateID-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StateID for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert from a <code>usize</code> to this implementation’s representation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert this implementation’s representation to a <code>usize</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_id\" class=\"method trait-impl\"><a href=\"#method.max_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_id</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum state identifier supported by this representation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_bytes\" class=\"method trait-impl\"><a href=\"#method.read_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_bytes</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Read a single state identifier from the given slice of bytes in native\nendian format. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_bytes\" class=\"method trait-impl\"><a href=\"#method.write_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_bytes</a>(self, slice: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Write this state identifier to the given slice of bytes in native\nendian format. <a>Read more</a></div></details></div></details>","StateID","rerun::external::eframe::egui_wgpu::wgpu::DynamicOffset","rerun::external::eframe::egui_wgpu::wgpu::ShaderLocation"]],
"rerun_c":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a></span><a href=\"#impl-Sub%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a></span><a href=\"#impl-Sub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#219\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-ConstParamTy-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#1028-1039\">source</a><a href=\"#impl-ConstParamTy-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","ConstParamTy","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a></span><a href=\"#impl-PartialOrd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-Binary-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Product%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Product-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a></span><a href=\"#impl-Add%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a></span><a href=\"#impl-Add-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#110\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-TrustedStep-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#19\">source</a><a href=\"#impl-TrustedStep-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/marker/trait.TrustedStep.html\" title=\"trait core::iter::traits::marker::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","TrustedStep","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a></span><a href=\"#impl-AddAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a></span><a href=\"#impl-AddAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#766\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a></span><a href=\"#impl-DivAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a></span><a href=\"#impl-DivAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#948\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-LowerHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-SimdCast-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/portable-simd/crates/core_simd/src/cast.rs.html#39\">source</a><a href=\"#impl-SimdCast-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/core_simd/cast/trait.SimdCast.html\" title=\"trait core::core_simd::cast::SimdCast\">SimdCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","SimdCast","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-StructuralEq-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#283-295\">source</a><a href=\"#impl-StructuralEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","StructuralEq","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a></span><a href=\"#impl-Rem-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>. The\nresult has the same sign as the left operand.</p>\n<h4 id=\"panics\"><a href=\"#panics\">Panics</a></h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a></span><a href=\"#impl-Rem%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#590-593\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a></span><a href=\"#impl-Rem%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details></div></details>","Rem<NonZeroU32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a></span><a href=\"#impl-BitOr%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NonZeroU32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-UpperHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a></span><a href=\"#impl-RemAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a></span><a href=\"#impl-RemAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#1009\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1399\">source</a></span><a href=\"#impl-FromStr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1399\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a></span><a href=\"#impl-SubAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a></span><a href=\"#impl-SubAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#833\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Eq-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1463\">source</a></span><a href=\"#impl-Eq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Eq","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/hash/mod.rs.html#823-836\">source</a></span><a href=\"#impl-Hash-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/hash/mod.rs.html#823-836\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/hash/mod.rs.html#823-836\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a></span><a href=\"#impl-Ord-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1581\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#829-831\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#849-851\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#874-877\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1452-1454\">source</a></span><a href=\"#impl-PartialEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1452-1454\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#1452-1454\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26usize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26isize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26isize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a></span><a href=\"#impl-LowerExp-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerExp","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#471-474\">source</a></span><a href=\"#impl-Display-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#471-474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Sum-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Sum%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-StructuralPartialEq-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","StructuralPartialEq","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Step-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#impl-Step-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html\" title=\"trait core::iter::range::Step\">Step</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward_unchecked\" class=\"fn\">forward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward_unchecked\" class=\"fn\">backward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward\" class=\"fn\">forward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.forward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward\" class=\"fn\">backward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#method.backward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.steps_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.steps_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.steps_between\" class=\"fn\">steps_between</a>(start: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, end: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the number of <em>successor</em> steps required to get from <code>start</code> to <code>end</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.steps_between\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.forward_checked\" class=\"fn\">forward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.forward_checked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.backward_checked\" class=\"fn\">backward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.76.0/core/iter/range/trait.Step.html#tymethod.backward_checked\">Read more</a></div></details></div></details>","Step","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a></span><a href=\"#impl-Div-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"docblock\"><p>This operation rounds towards zero, truncating any\nfractional part of the exact result.</p>\n<h4 id=\"panics\"><a href=\"#panics\">Panics</a></h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a></span><a href=\"#impl-Div%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#488-491\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a></span><a href=\"#impl-Div%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#314-321\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>This operation rounds towards zero,\ntruncating any fractional part of the exact result, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details></div></details>","Div<NonZeroU32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#201-204\">source</a></span><a href=\"#impl-Debug-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#201-204\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a></span><a href=\"#impl-MulAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a></span><a href=\"#impl-MulAssign%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#891\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdElement-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#892\">source</a><a href=\"#impl-SimdElement-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/core_simd/vector/trait.SimdElement.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>)</span></div></span><div class='docblock'>The mask element type corresponding to this element type.</div></details></div></details>","SimdElement","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a></span><a href=\"#impl-UpperExp-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#475-478\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperExp","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a></span><a href=\"#impl-Octal-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/fmt/num.rs.html#181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZeroU32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a></span><a href=\"#impl-From%3CNonZeroU32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/nonzero.rs.html#179-192\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(nonzero: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <code>NonZeroU32</code> into an <code>u32</code></p>\n</div></details></div></details>","From<NonZeroU32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#104\">source</a></span><a href=\"#impl-From%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#104\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>u16</code> to <code>u32</code> losslessly.</p>\n</div></details></div></details>","From<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIpv4Addr%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/net/ip_addr.rs.html#1145\">source</a></span><a href=\"#impl-From%3CIpv4Addr%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/net/ip_addr/struct.Ipv4Addr.html\" title=\"struct core::net::ip_addr::Ipv4Addr\">Ipv4Addr</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/net/ip_addr.rs.html#1148\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(ip: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/net/ip_addr/struct.Ipv4Addr.html\" title=\"struct core::net::ip_addr::Ipv4Addr\">Ipv4Addr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Uses <a href=\"https://doc.rust-lang.org/1.76.0/core/net/ip_addr/struct.Ipv4Addr.html#method.to_bits\" title=\"method core::net::ip_addr::Ipv4Addr::to_bits\"><code>Ipv4Addr::to_bits</code></a> to convert an IPv4 address to a host byte order <code>u32</code>.</p>\n</div></details></div></details>","From<Ipv4Addr>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#87\">source</a></span><a href=\"#impl-From%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#87\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <code>bool</code> to a <code>u32</code>. The resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code>\nvalues.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(u32::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cchar%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.13.0\">1.13.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/char/convert.rs.html#30\">source</a></span><a href=\"#impl-From%3Cchar%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/char/convert.rs.html#43\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::mem;\n\n<span class=\"kw\">let </span>c = <span class=\"string\">'c'</span>;\n<span class=\"kw\">let </span>u = u32::from(c);\n<span class=\"macro\">assert!</span>(<span class=\"number\">4 </span>== mem::size_of_val(<span class=\"kw-2\">&amp;</span>u))</code></pre></div>\n</div></details></div></details>","From<char>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#100\">source</a></span><a href=\"#impl-From%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#100\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>u8</code> to <code>u32</code> losslessly.</p>\n</div></details></div></details>","From<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Copy-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/marker.rs.html#489-499\">source</a></span><a href=\"#impl-Copy-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Copy","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a></span><a href=\"#impl-Mul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CDuration%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/time.rs.html#977\">source</a></span><a href=\"#impl-Mul%3CDuration%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/time.rs.html#981\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Duration>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26u32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a></span><a href=\"#impl-Mul%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/ops/arith.rs.html#349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/default.rs.html#165\">source</a></span><a href=\"#impl-Default-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/default.rs.html#165\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0</code></p>\n</div></details></div></details>","Default","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#305\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#305\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#321\">source</a></span><a href=\"#impl-TryFrom%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#321\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#306\">source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#306\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#323\">source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#323\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#328\">source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#328\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#322\">source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#322\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#329\">source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#329\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#394\">source</a></span><a href=\"#impl-TryFrom%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#394\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#389\">source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/convert/num.rs.html#389\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/value.rs.html#317-319\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.196/serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/value.rs.html#323\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.196/serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/ser/impls.rs.html#31\">source</a><a href=\"#impl-Serialize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/ser/impls.rs.html#31\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/impls.rs.html#352-358\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.196/src/serde/de/impls.rs.html#352-358\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReaderOffset-for-u32\" class=\"impl\"><a href=\"#impl-ReaderOffset-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ReaderOffset for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u8</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a u8 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u16</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a u16 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_i16</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an i16 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u32</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a u32 to an offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_u64</a>(offset64: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, Error&gt;</h4></section></summary><div class='docblock'>Convert a u64 to an offset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_u64\" class=\"method trait-impl\"><a href=\"#method.into_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert an offset to a u64.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked subtraction. Computes <code>self - other</code>.</div></details></div></details>","ReaderOffset","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Pod-for-u32\" class=\"impl\"><a href=\"#impl-Pod-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Pod","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexType-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#55\">source</a><a href=\"#impl-IndexType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html\" title=\"trait petgraph::graph_impl::IndexType\">IndexType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#57\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html#tymethod.new\" class=\"fn\">new</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#61\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html#tymethod.index\" class=\"fn\">index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/graph_impl/mod.rs.html#65\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/graph_impl/trait.IndexType.html#tymethod.max\" class=\"fn\">max</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","IndexType","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/matrix_graph.rs.html#178\">source</a><a href=\"#impl-Zero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/matrix_graph/trait.Zero.html\" title=\"trait petgraph::matrix_graph::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/matrix_graph.rs.html#178\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/matrix_graph/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Return the singleton object which can be used as a sentinel value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/matrix_graph.rs.html#178\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/matrix_graph/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if <code>self</code> is equal to the sentinel value.</div></details></div></details>","Zero","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoundedMeasure-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#impl-BoundedMeasure-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html\" title=\"trait petgraph::algo::BoundedMeasure\">BoundedMeasure</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html#tymethod.min\" class=\"fn\">min</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html#tymethod.max\" class=\"fn\">max</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/algo/mod.rs.html#875\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/algo/trait.BoundedMeasure.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></div></details>","BoundedMeasure","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DictionaryKey-for-u32\" class=\"impl\"><a href=\"#impl-DictionaryKey-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DictionaryKey for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.KEY_TYPE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.KEY_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">KEY_TYPE</a>: IntegerType = IntegerType::UInt32</h4></section></summary><div class='docblock'>The corresponding [<code>IntegerType</code>] of this key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.always_fits_usize\" class=\"method trait-impl\"><a href=\"#method.always_fits_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">always_fits_usize</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If the key type always can be converted to <code>usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Represents this key as a <code>usize</code>. <a>Read more</a></div></details></div></details>","DictionaryKey","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeType-for-u32\" class=\"impl\"><a href=\"#impl-NativeType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl NativeType for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.PRIMITIVE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PRIMITIVE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">PRIMITIVE</a>: PrimitiveType = PrimitiveType::UInt32</h4></section></summary><div class='docblock'>The corresponding variant of [<code>PrimitiveType</code>].</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Type denoting its representation as bytes.\nThis is <code>[u8; N]</code> where <code>N = size_of::&lt;T&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as NativeType&gt;::Bytes</h4></section></summary><div class='docblock'>To bytes in little endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as NativeType&gt;::Bytes</h4></section></summary><div class='docblock'>To bytes in big endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_le_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as NativeType&gt;::Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>From bytes in little endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_be_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as NativeType&gt;::Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>From bytes in big endian</div></details></div></details>","NativeType","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Simd-for-u32\" class=\"impl\"><a href=\"#impl-Simd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Simd for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Simd\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Simd\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Simd</a> = u32x16</h4></section></summary><div class='docblock'>The SIMD type associated with this trait.\nThis type supports SIMD operations</div></details></div></details>","Simd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index-for-u32\" class=\"impl\"><a href=\"#impl-Index-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Index for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert itself to <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Convert itself from <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_as_usize\" class=\"method trait-impl\"><a href=\"#method.from_as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_as_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert itself from <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.range\" class=\"method trait-impl\"><a href=\"#method.range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">range</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>, end: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;IndexRange&lt;Self&gt;&gt;</h4></section></summary><div class='docblock'>An iterator from (inclusive) <code>start</code> to (exclusive) <code>end</code>.</div></details></div></details>","Index","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitChunk-for-u32\" class=\"impl\"><a href=\"#impl-BitChunk-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitChunk for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_ne_bytes</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as NativeType&gt;::Bytes</h4></section></summary><div class='docblock'>convert itself into bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_ne_bytes</a>(v: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as NativeType&gt;::Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>convert itself from bytes.</div></details></div></details>","BitChunk","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u32\" class=\"impl\"><a href=\"#impl-FromBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from\" class=\"method trait-impl\"><a href=\"#method.ref_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from\" class=\"method trait-impl\"><a href=\"#method.mut_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_prefix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_suffix</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut Self</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from\" class=\"method trait-impl\"><a href=\"#method.slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_prefix\" class=\"method trait-impl\"><a href=\"#method.slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_suffix\" class=\"method trait-impl\"><a href=\"#method.slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from\" class=\"method trait-impl\"><a href=\"#method.mut_slice_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_slice_from</a>(bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_prefix\" class=\"method trait-impl\"><a href=\"#method.mut_slice_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_slice_from_prefix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>])&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_slice_from_suffix\" class=\"method trait-impl\"><a href=\"#method.mut_slice_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_slice_from_suffix</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.slice.html\">[Self]</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + AsBytes,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> with length\nequal to <code>count</code> without copying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from\" class=\"method trait-impl\"><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_prefix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_suffix</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","FromBytes","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-u32\" class=\"impl\"><a href=\"#impl-FromZeroes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeroes","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-u32\" class=\"impl\"><a href=\"#impl-AsBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","AsBytes","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-WriteAsDefault%3Cu32,+u32%3E-for-u32\" class=\"impl\"><a href=\"#impl-WriteAsDefault%3Cu32,+u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteAsDefault&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WriteAsDefault<u32, u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-VectorWrite%3Cu32%3E-for-u32\" class=\"impl\"><a href=\"#impl-VectorWrite%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VectorWrite&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","VectorWrite<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-WriteAsOptional%3Cu32%3E-for-u32\" class=\"impl\"><a href=\"#impl-WriteAsOptional%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteAsOptional&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WriteAsOptional<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-WriteAs%3Cu32%3E-for-u32\" class=\"impl\"><a href=\"#impl-WriteAs%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteAs&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","WriteAs<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-VectorRead%3C'buf%3E-for-u32\" class=\"impl\"><a href=\"#impl-VectorRead%3C'buf%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'buf&gt; VectorRead&lt;'buf&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","VectorRead<'buf>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#207\">source</a><a href=\"#impl-WrappingShr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html\" title=\"trait num_traits::ops::wrapping::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#207\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#24\">source</a><a href=\"#impl-CheckedAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#24\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#175\">source</a><a href=\"#impl-Num-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#175\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#101\">source</a><a href=\"#impl-SaturatingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html\" title=\"trait num_traits::ops::saturating::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#101\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#184\">source</a><a href=\"#impl-CheckedNeg-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html\" title=\"trait num_traits::ops::checked::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#184\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#impl-Saturating-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html\" title=\"trait num_traits::ops::saturating::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#50\">source</a><a href=\"#impl-OverflowingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#50\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#62\">source</a><a href=\"#impl-Bounded-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#62\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#62\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#172\">source</a><a href=\"#impl-WrappingShl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html\" title=\"trait num_traits::ops::wrapping::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#172\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#impl-WrappingNeg-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html\" title=\"trait num_traits::ops::wrapping::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#78\">source</a><a href=\"#impl-WrappingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html\" title=\"trait num_traits::ops::wrapping::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#78\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#95\">source</a><a href=\"#impl-CheckedDiv-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#95\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#801\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#impl-MulAddAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html\" title=\"trait num_traits::ops::mul_add::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add operation.</div></details></div></details>","MulAddAssign","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#49\">source</a><a href=\"#impl-Zero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#49\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#49\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#78\">source</a><a href=\"#impl-SaturatingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html\" title=\"trait num_traits::ops::saturating::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#78\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#85\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#87\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#86\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#88\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#27\">source</a><a href=\"#impl-OverflowingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#27\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#255\">source</a><a href=\"#impl-CheckedEuclid-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html\" title=\"trait num_traits::ops::euclid::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#255\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#255\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedEuclid","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#impl-FromPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#602\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#120\">source</a><a href=\"#impl-Euclid-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#120\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#120\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details></div></details>","Euclid","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#impl-PrimInt-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#501\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#265\">source</a><a href=\"#impl-CheckedShr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html\" title=\"trait num_traits::ops::checked::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#265\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#230\">source</a><a href=\"#impl-CheckedShl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html\" title=\"trait num_traits::ops::checked::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#230\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#71\">source</a><a href=\"#impl-CheckedMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#71\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#55\">source</a><a href=\"#impl-WrappingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html\" title=\"trait num_traits::ops::wrapping::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#55\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Unsigned-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/sign.rs.html#205\">source</a><a href=\"#impl-Unsigned-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Unsigned","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#138\">source</a><a href=\"#impl-One-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#138\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#138\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#102\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#impl-MulAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" title=\"type num_traits::ops::mul_add::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation.</div></details></div></details>","MulAdd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#723\">source</a><a href=\"#impl-NumCast-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#723\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">source</a><a href=\"#impl-SaturatingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html\" title=\"trait num_traits::ops::saturating::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#73\">source</a><a href=\"#impl-OverflowingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#73\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#136\">source</a><a href=\"#impl-CheckedRem-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html\" title=\"trait num_traits::ops::checked::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#136\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#impl-ToPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#278\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#47\">source</a><a href=\"#impl-CheckedSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#47\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#32\">source</a><a href=\"#impl-WrappingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html\" title=\"trait num_traits::ops::wrapping::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#32\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-u32\" class=\"impl\"><a href=\"#impl-Zeroable-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.76.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-u32\" class=\"impl\"><a href=\"#impl-Contiguous-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Pod-for-u32\" class=\"impl\"><a href=\"#impl-Pod-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Pod","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsU256-for-u32\" class=\"impl\"><a href=\"#impl-AsU256-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsU256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u256\" class=\"method trait-impl\"><a href=\"#method.as_u256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u256</a>(self) -&gt; U256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.U256.html\"><code>U256</code></a>.</div></details></div></details>","AsU256","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU256%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3CU256%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: U256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U256>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CI256%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3CI256%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;I256&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: I256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;I256&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<I256>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsI256-for-u32\" class=\"impl\"><a href=\"#impl-AsI256-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsI256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i256\" class=\"method trait-impl\"><a href=\"#method.as_i256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i256</a>(self) -&gt; I256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.I256.html\"><code>I256</code></a>.</div></details></div></details>","AsI256","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUInt32%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CUInt32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;UInt32&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: UInt32) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UInt32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SizeBytes-for-u32\" class=\"impl\"><a href=\"#impl-SizeBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SizeBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.heap_size_bytes\" class=\"method trait-impl\"><a href=\"#method.heap_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">heap_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> on the heap, in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_pod\" class=\"method trait-impl\"><a href=\"#method.is_pod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_pod</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is <code>Self</code> just plain old data? <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_size_bytes\" class=\"method trait-impl\"><a href=\"#method.total_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">total_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> in bytes, accounting for both stack and heap space.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stack_size_bytes\" class=\"method trait-impl\"><a href=\"#method.stack_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">stack_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> on the stack, in bytes. <a>Read more</a></div></details></div></details>","SizeBytes","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1144\">source</a><a href=\"#impl-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this integer type.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::MIN, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this integer type\n(2<sup>32</sup> − 1).</p>\n<h5 id=\"examples-1\"><a href=\"#examples-1\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::MAX, <span class=\"number\">4294967295</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 32u32</h4></section></summary><div class=\"docblock\"><p>The size of this integer type in bits.</p>\n<h5 id=\"examples-2\"><a href=\"#examples-2\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::BITS, <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a string slice in a given base to an integer.</p>\n<p>The string is expected to be an optional <code>+</code> sign\nfollowed by digits.\nLeading and trailing whitespace represent an error.\nDigits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples-3\"><a href=\"#examples-3\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::from_str_radix(<span class=\"string\">\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-4\"><a href=\"#examples-4\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b01001100u32</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.count_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of zeros in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-5\"><a href=\"#examples-5\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::MAX.count_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>Depending on what you’re doing with the value, you might also be interested in the\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.ilog2\" title=\"method u32::ilog2\"><code>ilog2</code></a> function which returns a consistent number, even if the type widens.</p>\n<h5 id=\"examples-6\"><a href=\"#examples-6\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u32::MAX &gt;&gt; <span class=\"number\">2</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-7\"><a href=\"#examples-7\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b0101000u32</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-8\"><a href=\"#examples-8\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = !(u32::MAX &gt;&gt; <span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(n.leading_ones(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing ones in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-9\"><a href=\"#examples-9\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b1010111u32</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the left by a specified amount, <code>n</code>,\nwrapping the truncated bits to the end of the resulting integer.</p>\n<p>Please note this isn’t the same operation as the <code>&lt;&lt;</code> shifting operator!</p>\n<h5 id=\"examples-10\"><a href=\"#examples-10\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x10000b3u32</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0xb301</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_left(<span class=\"number\">8</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the right by a specified amount, <code>n</code>,\nwrapping the truncated bits to the beginning of the resulting\ninteger.</p>\n<p>Please note this isn’t the same operation as the <code>&gt;&gt;</code> shifting operator!</p>\n<h5 id=\"examples-11\"><a href=\"#examples-11\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0xb301u32</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0x10000b3</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_right(<span class=\"number\">8</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Reverses the byte order of the integer.</p>\n<h5 id=\"examples-12\"><a href=\"#examples-12\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x12345678u32</span>;\n<span class=\"kw\">let </span>m = n.swap_bytes();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x78563412</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0, const since 1.37.0\">1.37.0 (const: 1.37.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Reverses the order of bits in the integer. The least significant bit becomes the most significant bit,\nsecond least-significant bit becomes second most-significant bit, etc.</p>\n<h5 id=\"examples-13\"><a href=\"#examples-13\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x12345678u32</span>;\n<span class=\"kw\">let </span>m = n.reverse_bits();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x1e6a2c48</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0</span>, <span class=\"number\">0u32</span>.reverse_bits());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from big endian to the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-14\"><a href=\"#examples-14\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u32::from_be(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u32::from_be(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from little endian to the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-15\"><a href=\"#examples-15\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u32::from_le(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u32::from_le(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to big endian from the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-16\"><a href=\"#examples-16\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to little endian from the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-17\"><a href=\"#examples-17\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au32</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code>\nif overflow occurred.</p>\n<h5 id=\"examples-18\"><a href=\"#examples-18\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(u32::MAX - <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer addition. Computes <code>self + rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>This results in undefined behavior when\n<code>self + rhs &gt; u32::MAX</code> or <code>self + rhs &lt; u32::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_add\" title=\"method u32::checked_add\"><code>checked_add</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition with a signed integer. Computes <code>self + rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-19\"><a href=\"#examples-19\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_add_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_add_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).checked_add_signed(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-20\"><a href=\"#examples-20\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer subtraction. Computes <code>self - rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety-1\"><a href=\"#safety-1\">Safety</a></h5>\n<p>This results in undefined behavior when\n<code>self - rhs &gt; u32::MAX</code> or <code>self - rhs &lt; u32::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_sub\" title=\"method u32::checked_sub\"><code>checked_sub</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer multiplication. Computes <code>self * rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-21\"><a href=\"#examples-21\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_mul(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_mul(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer multiplication. Computes <code>self * rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety-2\"><a href=\"#safety-2\">Safety</a></h5>\n<p>This results in undefined behavior when\n<code>self * rhs &gt; u32::MAX</code> or <code>self * rhs &lt; u32::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_mul\" title=\"method u32::checked_mul\"><code>checked_mul</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.52.0\">1.0.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer division. Computes <code>self / rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-22\"><a href=\"#examples-22\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.checked_div(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_div(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-23\"><a href=\"#examples-23\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.checked_div_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_div_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-24\"><a href=\"#examples-24\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-25\"><a href=\"#examples-25\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_rem_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.ilog\" class=\"fn\">ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>ilog2</code> can produce results more efficiently for base 2, and <code>ilog10</code>\ncan produce results more efficiently for base 10.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>This function will panic if <code>self</code> is zero, or if <code>base</code> is less than 2.</p>\n<h5 id=\"examples-26\"><a href=\"#examples-26\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.ilog(<span class=\"number\">5</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-2\"><a href=\"#panics-2\">Panics</a></h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"examples-27\"><a href=\"#examples-27\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.ilog2(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-3\"><a href=\"#panics-3\">Panics</a></h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u32</span>.ilog10(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_ilog\" class=\"fn\">checked_ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>Returns <code>None</code> if the number is zero, or if the base is not at least 2.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>checked_ilog2</code> can produce results more efficiently for base 2, and\n<code>checked_ilog10</code> can produce results more efficiently for base 10.</p>\n<h5 id=\"examples-28\"><a href=\"#examples-28\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.checked_ilog(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_ilog2\" class=\"fn\">checked_ilog2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-29\"><a href=\"#examples-29\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.checked_ilog2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_ilog10\" class=\"fn\">checked_ilog10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-30\"><a href=\"#examples-30\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u32</span>.checked_ilog10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>, returning <code>None</code> unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"examples-31\"><a href=\"#examples-31\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.checked_neg(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-32\"><a href=\"#examples-32\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u32</span>.checked_shl(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x10</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.checked_shl(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_shifts\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_shl\" class=\"fn\">unchecked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-3\"><a href=\"#safety-3\">Safety</a></h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_shl\" title=\"method u32::checked_shl\"><code>checked_shl</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-33\"><a href=\"#examples-33\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.checked_shr(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.checked_shr(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_shifts\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.unchecked_shr\" class=\"fn\">unchecked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-4\"><a href=\"#safety-4\">Safety</a></h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.checked_shr\" title=\"method u32::checked_shr\"><code>checked_shr</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if\noverflow occurred.</p>\n<h5 id=\"examples-34\"><a href=\"#examples-34\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.checked_pow(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">32</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_pow(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-35\"><a href=\"#examples-35\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.saturating_add(<span class=\"number\">1</span>), <span class=\"number\">101</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.saturating_add(<span class=\"number\">127</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating addition with a signed integer. Computes <code>self + rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-36\"><a href=\"#examples-36\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.saturating_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.saturating_add_signed(-<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).saturating_add_signed(<span class=\"number\">4</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating\nat the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-37\"><a href=\"#examples-37\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.saturating_sub(<span class=\"number\">27</span>), <span class=\"number\">73</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13u32</span>.saturating_sub(<span class=\"number\">127</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer multiplication. Computes <code>self * rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-38\"><a href=\"#examples-38\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.saturating_mul(<span class=\"number\">10</span>), <span class=\"number\">20</span>);\n<span class=\"macro\">assert_eq!</span>((u32::MAX).saturating_mul(<span class=\"number\">10</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const since 1.58.0\">1.58.0 (const: 1.58.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer division. Computes <code>self / rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</p>\n<h5 id=\"examples-39\"><a href=\"#examples-39\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.saturating_div(<span class=\"number\">2</span>), <span class=\"number\">2</span>);\n</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let _ </span>= <span class=\"number\">1u32</span>.saturating_div(<span class=\"number\">0</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-40\"><a href=\"#examples-40\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">4u32</span>.saturating_pow(<span class=\"number\">3</span>), <span class=\"number\">64</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.saturating_pow(<span class=\"number\">2</span>), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition. Computes <code>self + rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-41\"><a href=\"#examples-41\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u32</span>.wrapping_add(<span class=\"number\">55</span>), <span class=\"number\">255</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u32</span>.wrapping_add(u32::MAX), <span class=\"number\">199</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition with a signed integer. Computes\n<code>self + rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-42\"><a href=\"#examples-42\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_add_signed(-<span class=\"number\">2</span>), u32::MAX);\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).wrapping_add_signed(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction. Computes <code>self - rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-43\"><a href=\"#examples-43\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_sub(<span class=\"number\">100</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_sub(u32::MAX), <span class=\"number\">101</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) multiplication. Computes <code>self * rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-44\"><a href=\"#examples-44\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u8</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">120</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">25u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">44</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) division. Computes <code>self / rhs</code>.\nWrapped division on unsigned types is just normal division.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.</p>\n<h5 id=\"panics-4\"><a href=\"#panics-4\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-45\"><a href=\"#examples-45\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>.\nWrapped division on unsigned types is just normal division.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.wrapping_div(rhs)</code>.</p>\n<h5 id=\"panics-5\"><a href=\"#panics-5\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-46\"><a href=\"#examples-46\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_rem\" class=\"fn\">wrapping_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) remainder. Computes <code>self % rhs</code>.\nWrapped remainder calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.</p>\n<h5 id=\"panics-6\"><a href=\"#panics-6\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-47\"><a href=\"#examples-47\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_rem_euclid\" class=\"fn\">wrapping_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.\nWrapped modulo calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.wrapping_rem(rhs)</code>.</p>\n<h5 id=\"panics-7\"><a href=\"#panics-7\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-48\"><a href=\"#examples-48\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.wrapping_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type.</p>\n<p>Since unsigned types do not have negative equivalents\nall applications of this function will wrap (except for <code>-0</code>).\nFor values smaller than the corresponding signed type’s maximum\nthe result is the same as casting the corresponding signed value.\nAny larger values are equivalent to <code>MAX + 1 - (val - MAX - 1)</code> where\n<code>MAX</code> is the corresponding signed type’s maximum.</p>\n<h5 id=\"examples-49\"><a href=\"#examples-49\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u32</span>.wrapping_neg(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.wrapping_neg(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13_u32</span>.wrapping_neg(), (!<span class=\"number\">13</span>) + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">42_u32</span>.wrapping_neg(), !(<span class=\"number\">42 </span>- <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-left; the\nRHS of a wrapping shift-left is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.rotate_left\" title=\"method u32::rotate_left\"><code>rotate_left</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-50\"><a href=\"#examples-50\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_shl(<span class=\"number\">7</span>), <span class=\"number\">128</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.wrapping_shl(<span class=\"number\">128</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-right; the\nRHS of a wrapping shift-right is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.rotate_right\" title=\"method u32::rotate_right\"><code>rotate_right</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-51\"><a href=\"#examples-51\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.wrapping_shr(<span class=\"number\">7</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u32</span>.wrapping_shr(<span class=\"number\">128</span>), <span class=\"number\">128</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_pow\" class=\"fn\">wrapping_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-52\"><a href=\"#examples-52\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.wrapping_pow(<span class=\"number\">5</span>), <span class=\"number\">243</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_pow(<span class=\"number\">6</span>), <span class=\"number\">217</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code></p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-53\"><a href=\"#examples-53\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_add(<span class=\"number\">2</span>), (<span class=\"number\">7</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.overflowing_add(<span class=\"number\">1</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.carrying_add\" class=\"fn\">carrying_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> + <code>carry</code> and returns a tuple containing\nthe sum and the output carry.</p>\n<p>Performs “ternary addition” of two integer operands and a carry-in\nbit, and returns an output integer and a carry-out bit. This allows\nchaining together multiple additions to create a wider addition, and\ncan be useful for bignum addition.</p>\n<p>This can be thought of as a 32-bit “full adder”, in the electronics sense.</p>\n<p>If the input carry is false, this method is equivalent to\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.overflowing_add\" title=\"method u32::overflowing_add\"><code>overflowing_add</code></a>, and the output carry is\nequal to the overflow flag. Note that although carry and overflow\nflags are similar for unsigned integers, they are different for\nsigned integers.</p>\n<h5 id=\"examples-54\"><a href=\"#examples-54\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    3  MAX    (a = 3 × 2^32 + 2^32 - 1)\n// +  5    7    (b = 5 × 2^32 + 7)\n// ---------\n//    9    6    (sum = 9 × 2^32 + 6)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u32, u32) = (<span class=\"number\">3</span>, u32::MAX);\n<span class=\"kw\">let </span>(b1, b0): (u32, u32) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>carry0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(sum0, carry1) = a0.carrying_add(b0, carry0);\n<span class=\"macro\">assert_eq!</span>(carry1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(sum1, carry2) = a1.carrying_add(b1, carry1);\n<span class=\"macro\">assert_eq!</span>(carry2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((sum1, sum0), (<span class=\"number\">9</span>, <span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> with a signed <code>rhs</code></p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-55\"><a href=\"#examples-55\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.overflowing_add_signed(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.overflowing_add_signed(-<span class=\"number\">2</span>), (u32::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>((u32::MAX - <span class=\"number\">2</span>).overflowing_add_signed(<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code></p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-56\"><a href=\"#examples-56\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_sub(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.overflowing_sub(<span class=\"number\">1</span>), (u32::MAX, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.borrowing_sub\" class=\"fn\">borrowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, borrow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> − <code>rhs</code> − <code>borrow</code> and returns a tuple\ncontaining the difference and the output borrow.</p>\n<p>Performs “ternary subtraction” by subtracting both an integer\noperand and a borrow-in bit from <code>self</code>, and returns an output\ninteger and a borrow-out bit. This allows chaining together multiple\nsubtractions to create a wider subtraction, and can be useful for\nbignum subtraction.</p>\n<h5 id=\"examples-57\"><a href=\"#examples-57\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    9    6    (a = 9 × 2^32 + 6)\n// -  5    7    (b = 5 × 2^32 + 7)\n// ---------\n//    3  MAX    (diff = 3 × 2^32 + 2^32 - 1)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u32, u32) = (<span class=\"number\">9</span>, <span class=\"number\">6</span>);\n<span class=\"kw\">let </span>(b1, b0): (u32, u32) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>borrow0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(diff0, borrow1) = a0.borrowing_sub(b0, borrow0);\n<span class=\"macro\">assert_eq!</span>(borrow1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(diff1, borrow2) = a1.borrowing_sub(b1, borrow1);\n<span class=\"macro\">assert_eq!</span>(borrow2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((diff1, diff0), (<span class=\"number\">3</span>, u32::MAX));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0, const since 1.60.0\">1.60.0 (const: 1.60.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute difference between <code>self</code> and <code>other</code>.</p>\n<h5 id=\"examples-58\"><a href=\"#examples-58\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.abs_diff(<span class=\"number\">80</span>), <span class=\"number\">20u32</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u32</span>.abs_diff(<span class=\"number\">110</span>), <span class=\"number\">10u32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the multiplication of <code>self</code> and <code>rhs</code>.</p>\n<p>Returns a tuple of the multiplication along with a boolean\nindicating whether an arithmetic overflow would occur. If an\noverflow would have occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-59\"><a href=\"#examples-59\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.overflowing_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.</p>\n<h5 id=\"panics-8\"><a href=\"#panics-8\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-60\"><a href=\"#examples-60\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_div(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of Euclidean division <code>self.div_euclid(rhs)</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.overflowing_div(rhs)</code>.</p>\n<h5 id=\"panics-9\"><a href=\"#panics-9\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-61\"><a href=\"#examples-61\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_div_euclid(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_rem\" class=\"fn\">overflowing_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the remainder after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.</p>\n<h5 id=\"panics-10\"><a href=\"#panics-10\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-62\"><a href=\"#examples-62\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_rem(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_rem_euclid\" class=\"fn\">overflowing_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder <code>self.rem_euclid(rhs)</code> as if by Euclidean division.</p>\n<p>Returns a tuple of the modulo after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this operation\nis exactly equal to <code>self.overflowing_rem(rhs)</code>.</p>\n<h5 id=\"panics-11\"><a href=\"#panics-11\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-63\"><a href=\"#examples-63\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_rem_euclid(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self in an overflowing fashion.</p>\n<p>Returns <code>!self + 1</code> using wrapping operations to return the value\nthat represents the negation of this unsigned value. Note that for\npositive unsigned values overflow always occurs, but negating 0 does\nnot overflow.</p>\n<h5 id=\"examples-64\"><a href=\"#examples-64\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.overflowing_neg(), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.overflowing_neg(), (-<span class=\"number\">2i32 </span><span class=\"kw\">as </span>u32, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self left by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-65\"><a href=\"#examples-65\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u32</span>.overflowing_shl(<span class=\"number\">4</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u32</span>.overflowing_shl(<span class=\"number\">132</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self right by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-66\"><a href=\"#examples-66\">Examples</a></h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.overflowing_shr(<span class=\"number\">4</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u32</span>.overflowing_shr(<span class=\"number\">132</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.overflowing_pow\" class=\"fn\">overflowing_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<p>Returns a tuple of the exponentiation along with a bool indicating\nwhether an overflow happened.</p>\n<h5 id=\"examples-67\"><a href=\"#examples-67\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.overflowing_pow(<span class=\"number\">5</span>), (<span class=\"number\">243</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.overflowing_pow(<span class=\"number\">6</span>), (<span class=\"number\">217</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<h5 id=\"examples-68\"><a href=\"#examples-68\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isqrt\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/116226\" title=\"Tracking issue for isqrt\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.isqrt\" class=\"fn\">isqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isqrt</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the square root of the number, rounded down.</p>\n<h5 id=\"examples-69\"><a href=\"#examples-69\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isqrt)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u32</span>.isqrt(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Performs Euclidean division.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self / rhs</code>.</p>\n<h5 id=\"panics-12\"><a href=\"#panics-12\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-70\"><a href=\"#examples-70\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u32</span>.div_euclid(<span class=\"number\">4</span>), <span class=\"number\">1</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the least remainder of <code>self (mod rhs)</code>.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self % rhs</code>.</p>\n<h5 id=\"panics-13\"><a href=\"#panics-13\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-71\"><a href=\"#examples-71\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u32</span>.rem_euclid(<span class=\"number\">4</span>), <span class=\"number\">3</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_roundings</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards negative infinity.</p>\n<p>This is the same as performing <code>self / rhs</code> for all unsigned integers.</p>\n<h5 id=\"panics-14\"><a href=\"#panics-14\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-72\"><a href=\"#examples-72\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_roundings)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u32</span>.div_floor(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.div_ceil\" class=\"fn\">div_ceil</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards positive infinity.</p>\n<h5 id=\"panics-15\"><a href=\"#panics-15\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior\"><a href=\"#overflow-behavior\">Overflow behavior</a></h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-73\"><a href=\"#examples-73\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u32</span>.div_ceil(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>.</p>\n<h5 id=\"panics-16\"><a href=\"#panics-16\">Panics</a></h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior-1\"><a href=\"#overflow-behavior-1\">Overflow behavior</a></h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-74\"><a href=\"#examples-74\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u32</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">16</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u32</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">24</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>. Returns <code>None</code> if <code>rhs</code> is zero or the\noperation would result in overflow.</p>\n<h5 id=\"examples-75\"><a href=\"#examples-75\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u32</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">16</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u32</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">24</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u32</span>.checked_next_multiple_of(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_next_multiple_of(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.</p>\n<h5 id=\"examples-76\"><a href=\"#examples-76\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">16u32</span>.is_power_of_two());\n<span class=\"macro\">assert!</span>(!<span class=\"number\">10u32</span>.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>.</p>\n<p>When return value overflows (i.e., <code>self &gt; (1 &lt;&lt; (N-1))</code> for type\n<code>uN</code>), it panics in debug mode and the return value is wrapped to 0 in\nrelease mode (the only situation in which method can return 0).</p>\n<h5 id=\"examples-77\"><a href=\"#examples-77\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.next_power_of_two(), <span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\n<code>None</code> is returned, otherwise the power of two is wrapped in <code>Some</code>.</p>\n<h5 id=\"examples-78\"><a href=\"#examples-78\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.checked_next_power_of_two(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/32463\" title=\"Tracking issue for wrapping_next_power_of_two\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>wrapping_next_power_of_two</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\nthe return value is wrapped to <code>0</code>.</p>\n<h5 id=\"examples-79\"><a href=\"#examples-79\">Examples</a></h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(wrapping_next_power_of_two)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u32</span>.wrapping_next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u32</span>.wrapping_next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u32::MAX.wrapping_next_power_of_two(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nbig-endian (network) byte order.</p>\n<h5 id=\"examples-80\"><a href=\"#examples-80\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12345678u32</span>.to_be_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nlittle-endian byte order.</p>\n<h5 id=\"examples-81\"><a href=\"#examples-81\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12345678u32</span>.to_le_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nnative byte order.</p>\n<p>As the target platform’s native endianness is used, portable code\nshould use <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.to_be_bytes\" title=\"method u32::to_be_bytes\"><code>to_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.to_le_bytes\" title=\"method u32::to_le_bytes\"><code>to_le_bytes</code></a>, as appropriate,\ninstead.</p>\n<h5 id=\"examples-82\"><a href=\"#examples-82\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12345678u32</span>.to_ne_bytes();\n<span class=\"macro\">assert_eq!</span>(\n    bytes,\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]\n    } <span class=\"kw\">else </span>{\n        [<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n    }\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its representation\nas a byte array in big endian.</p>\n<h5 id=\"examples-83\"><a href=\"#examples-83\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u32::from_be_bytes([<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12345678</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_be_u32(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u32 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u32&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u32::from_be_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its representation\nas a byte array in little endian.</p>\n<h5 id=\"examples-84\"><a href=\"#examples-84\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u32::from_le_bytes([<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12345678</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_le_u32(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u32 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u32&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u32::from_le_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its memory representation\nas a byte array in native endianness.</p>\n<p>As the target platform’s native endianness is used, portable code\nlikely wants to use <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.from_be_bytes\" title=\"associated function u32::from_be_bytes\"><code>from_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.from_le_bytes\" title=\"associated function u32::from_le_bytes\"><code>from_le_bytes</code></a>, as\nappropriate instead.</p>\n<h5 id=\"examples-85\"><a href=\"#examples-85\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u32::from_ne_bytes(<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n});\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12345678</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_ne_u32(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u32 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u32&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u32::from_ne_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MIN</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MIN\" title=\"associated constant u32::MIN\"><code>u32::MIN</code></a> instead.</p>\n<p>Returns the smallest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1145-1163\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MAX</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#associatedconstant.MAX\" title=\"associated constant u32::MAX\"><code>u32::MAX</code></a> instead.</p>\n<p>Returns the largest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.widening_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1164\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.widening_mul\" class=\"fn\">widening_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the complete product <code>self * rhs</code> without the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>If you also need to add a carry to the wide result, then you want\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.carrying_mul\" title=\"method u32::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-86\"><a href=\"#examples-86\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.widening_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.widening_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1164\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.carrying_mul\" class=\"fn\">carrying_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need the <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.widening_mul\" title=\"method u32::widening_mul\"><code>Self::widening_mul</code></a> instead.</p>\n<h5 id=\"examples-87\"><a href=\"#examples-87\">Examples</a></h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">10</span>), (<span class=\"number\">20</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065418</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u32::MAX.carrying_mul(u32::MAX, u32::MAX), (<span class=\"number\">0</span>, u32::MAX));</code></pre></div>\n<p>This is the core operation needed for scalar multiplication when\nimplementing it for wider-than-native types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">fn </span>scalar_mul_eq(little_endian_digits: <span class=\"kw-2\">&amp;mut </span>Vec&lt;u16&gt;, multiplicand: u16) {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n    <span class=\"kw\">for </span>d <span class=\"kw\">in </span>little_endian_digits.iter_mut() {\n        (<span class=\"kw-2\">*</span>d, carry) = d.carrying_mul(multiplicand, carry);\n    }\n    <span class=\"kw\">if </span>carry != <span class=\"number\">0 </span>{\n        little_endian_digits.push(carry);\n    }\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">10</span>, <span class=\"number\">20</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">30</span>, <span class=\"number\">60</span>]);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x87654321_u64 </span>* <span class=\"number\">0xFEED</span>, <span class=\"number\">0x86D3D159E38D</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">0x4321</span>, <span class=\"number\">0x8765</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">0xFEED</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">0xE38D</span>, <span class=\"number\">0xD159</span>, <span class=\"number\">0x86D3</span>]);</code></pre></div>\n<p>If <code>carry</code> is zero, this is similar to <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.overflowing_mul\" title=\"method u32::overflowing_mul\"><code>overflowing_mul</code></a>,\nexcept that it gives the value of the overflow instead of just whether one happened:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>));\n<span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>));</code></pre></div>\n<p>The value of the first field in the returned tuple matches what you’d get\nby combining the <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.wrapping_mul\" title=\"method u32::wrapping_mul\"><code>wrapping_mul</code></a> and\n<a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#method.wrapping_add\" title=\"method u32::wrapping_add\"><code>wrapping_add</code></a> methods:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(\n    <span class=\"number\">789_u16</span>.carrying_mul(<span class=\"number\">456</span>, <span class=\"number\">123</span>).<span class=\"number\">0</span>,\n    <span class=\"number\">789_u16</span>.wrapping_mul(<span class=\"number\">456</span>).wrapping_add(<span class=\"number\">123</span>),\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/num/mod.rs.html#1165\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-88\"><a href=\"#examples-88\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u32</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u32</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details></div></details>",0,"rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-IsEnabled-for-u32\" class=\"impl\"><a href=\"#impl-IsEnabled-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IsEnabled for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","IsEnabled","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-u32\" class=\"impl\"><a href=\"#impl-Value-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(mode: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Support conversions from <code>Mode</code> to raw mode values.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>rustix::fs::{Mode, RawMode};\n<span class=\"macro\">assert_eq!</span>(RawMode::from(Mode::RWXU), <span class=\"number\">0o700</span>);</code></pre></div>\n</div></details></div></details>","From<Mode>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/uniform.rs.html#567\">source</a><a href=\"#impl-SampleUniform-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Weight-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted.rs.html#44\">source</a><a href=\"#impl-Weight-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html\" title=\"trait rand::distributions::weighted::alias_method::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Weight","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type-for-u32\" class=\"impl\"><a href=\"#impl-Type-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Type for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.signature\" class=\"method trait-impl\"><a href=\"#method.signature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">signature</a>() -&gt; Signature&lt;'static&gt;</h4></section></summary><div class='docblock'>Get the signature for the implementing type. <a>Read more</a></div></details></div></details>","Type","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Basic-for-u32\" class=\"impl\"><a href=\"#impl-Basic-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Basic for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIGNATURE_CHAR\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_CHAR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_CHAR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.char.html\">char</a> = &#39;u&#39;</h4></section></summary><div class='docblock'>The type signature, as a character.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIGNATURE_STR\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIGNATURE_STR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIGNATURE_STR</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a> = &quot;u&quot;</h4></section></summary><div class='docblock'>The type signature, as a string.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alignment\" class=\"method trait-impl\"><a href=\"#method.alignment\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">alignment</a>(format: EncodingFormat) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The required padding alignment for the given format.</div></details></div></details>","Basic","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26OwnedValue%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26OwnedValue%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a OwnedValue&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    v: &amp;'a OwnedValue\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a OwnedValue&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a OwnedValue>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CValue%3C'a%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3CValue%3C'a%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Value&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: Value&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Value&lt;'a&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Value<'a>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26Value%3C'a%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26Value%3C'a%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a Value&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: &amp;'a Value&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a Value&lt;'a&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a Value<'a>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3COwnedValue%3E-for-u32\" class=\"impl\"><a href=\"#impl-TryFrom%3COwnedValue%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;OwnedValue&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(v: OwnedValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;OwnedValue&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<OwnedValue>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUid%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CUid%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uid&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uid: Uid) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Uid>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGid%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CGid%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Gid&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(gid: Gid) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Gid>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CZ0%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CZ0%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<Z0>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CPInt%3CU%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CPInt%3CU%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<PInt<U>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUInt%3CU,+B%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CUInt%3CU,+B%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, B&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UInt<U, B>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUTerm%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#impl-Pow%3CUTerm%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#229\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UTerm>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMode%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Mode&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(mode: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Support conversions from <code>Mode</code> to raw mode values.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>rustix::fs::{Mode, RawMode};\n<span class=\"macro\">assert_eq!</span>(RawMode::from(Mode::RWXU), <span class=\"number\">0o700</span>);</code></pre></div>\n</div></details></div></details>","From<Mode>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteHex-for-u32\" class=\"impl\"><a href=\"#impl-WriteHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_hex\" class=\"method trait-impl\"><a href=\"#method.write_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_hex</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Write the value as hex.</div></details></div></details>","WriteHex","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bits-for-u32\" class=\"impl\"><a href=\"#impl-Bits-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Bits for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EMPTY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EMPTY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>A value with all bits unset.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>A value with all bits set.</div></details></div></details>","Bits","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseHex-for-u32\" class=\"impl\"><a href=\"#impl-ParseHex-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ParseHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_hex\" class=\"method trait-impl\"><a href=\"#method.parse_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_hex</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, ParseError&gt;</h4></section></summary><div class='docblock'>Parse the value from hex.</div></details></div></details>","ParseHex","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoNotification-for-u32\" class=\"impl\"><a href=\"#impl-IntoNotification-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoNotification for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Tag\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Tag\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Tag</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The tag data associated with a notification. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Notify\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Notify\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Notify</a> = Notify</h4></section></summary><div class='docblock'>The notification type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_notification\" class=\"method trait-impl\"><a href=\"#method.into_notification\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_notification</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as IntoNotification&gt;::Notify</h4></section></summary><div class='docblock'>Convert this value into a notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.additional\" class=\"method trait-impl\"><a href=\"#method.additional\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">additional</a>(self) -&gt; Additional&lt;Self::Notify&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert this value into an additional notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relaxed\" class=\"method trait-impl\"><a href=\"#method.relaxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relaxed</a>(self) -&gt; Relaxed&lt;Self::Notify&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Don’t emit a fence for this notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: T) -&gt; Tag&lt;Self::Notify, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + IntoNotification&lt;Tag = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>Use a tag with this notification. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag_with\" class=\"method trait-impl\"><a href=\"#method.tag_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag_with</a>&lt;T, F&gt;(self, tag: F) -&gt; TagWith&lt;Self::Notify, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + IntoNotification&lt;Tag = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T,</div></h4></section></summary><div class='docblock'>Use a function to generate a tag with this notification. <a>Read more</a></div></details></div></details>","IntoNotification","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CDuration%3E-for-u32\" class=\"impl\"><a href=\"#impl-Mul%3CDuration%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Duration&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Duration</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: Duration) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Duration&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Duration>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-Integer-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.6/src/itoa/lib.rs.html#202-209\">source</a><a href=\"#impl-Integer-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/itoa/1.0.6/itoa/trait.Integer.html\" title=\"trait itoa::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","Integer","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#impl-Mul%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26FixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#impl-Mul%3C%26FixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/arith.rs.html#583\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#919\">source</a><a href=\"#impl-LosslessTryFrom%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#919\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#595\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#595\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU128<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#915\">source</a><a href=\"#impl-LosslessTryFrom%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#915\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#impl-LosslessTryFrom%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#906\">source</a><a href=\"#impl-LosslessTryFrom%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#906\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#587\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#587\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI16<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#593\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#593\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU32<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#898\">source</a><a href=\"#impl-LosslessTryFrom%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#898\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#impl-LosslessTryFrom%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#impl-LosslessTryFrom%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cbool%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#impl-LosslessTryFrom%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<bool>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#589\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#589\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI64<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#904\">source</a><a href=\"#impl-LosslessTryFrom%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#904\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#896\">source</a><a href=\"#impl-LosslessTryFrom%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#896\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#592\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#592\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU16<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#588\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#588\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI32<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#591\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#591\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU8<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#594\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#594\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU64<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#586\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#586\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI8<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#917\">source</a><a href=\"#impl-LosslessTryFrom%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#917\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#902\">source</a><a href=\"#impl-LosslessTryFrom%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#902\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#900\">source</a><a href=\"#impl-LosslessTryFrom%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#900\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#590\">source</a><a href=\"#impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#590\">source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI128<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedBits-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBits-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html\" title=\"trait fixed::traits_bits::FixedBits\">FixedBits</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The smallest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>The largest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_SIGNED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.IS_SIGNED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.IS_SIGNED\" class=\"constant\">IS_SIGNED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if this integer type is signed.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#associatedconstant.BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBits.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 32u32</h4></section></summary><div class='docblock'>The size of this integer type in bits.</div></details></div></details>","FixedBits","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFixed-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#impl-FromFixed-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.from_fixed\" class=\"fn\">from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" title=\"associated function fixed::traits::FromFixed::wrapping_from_fixed\"><code>wrapping_from_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.checked_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.checked_from_fixed\" class=\"fn\">checked_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.saturating_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.saturating_from_fixed\" class=\"fn\">saturating_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, saturating if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.wrapping_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" class=\"fn\">wrapping_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, wrapping if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.overflowing_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#tymethod.overflowing_from_fixed\" class=\"fn\">overflowing_from_fixed</a>&lt;F&gt;(src: F) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the value and a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.unwrapped_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FromFixed.html#method.unwrapped_from_fixed\" class=\"fn\">unwrapped_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, panicking if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>Panics if the value\ndoes not fit, even when debug assertions are not enabled.</p>\n</div></details></div></details>","FromFixed","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsOptionalArbitrary-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalArbitrary-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalArbitrary.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalArbitrary\">FixedBitsOptionalArbitrary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalArbitrary","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#536\">source</a><a href=\"#impl-From%3CFixedU8%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#536\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU8<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#542\">source</a><a href=\"#impl-From%3CFixedU16%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#542\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU16<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#547\">source</a><a href=\"#impl-From%3CFixedU32%3CUTerm%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#547\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU32<UTerm>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToFixed-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#impl-ToFixed-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.to_fixed\" class=\"fn\">to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" title=\"method fixed::traits::ToFixed::wrapping_to_fixed\"><code>wrapping_to_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.checked_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.checked_to_fixed\" class=\"fn\">checked_to_fixed</a>&lt;F&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.saturating_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.saturating_to_fixed\" class=\"fn\">saturating_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, saturating if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.wrapping_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" class=\"fn\">wrapping_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, wrapping if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.overflowing_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#tymethod.overflowing_to_fixed\" class=\"fn\">overflowing_to_fixed</a>&lt;F&gt;(self) -&gt; (F, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On overflow, the\nwrapped value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.unwrapped_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.ToFixed.html#method.unwrapped_to_fixed\" class=\"fn\">unwrapped_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, panicking if it does not fit.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>Panics if the value does not fit, even when debug\nassertions are not enabled.</p>\n</div></details></div></details>","ToFixed","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsOptionalBorsh-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalBorsh-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalBorsh.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalBorsh\">FixedBitsOptionalBorsh</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalBorsh","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedEquiv-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#impl-FixedEquiv-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html\" title=\"trait fixed::traits::FixedEquiv\">FixedEquiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Equiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#associatedtype.Equiv\" class=\"associatedtype\">Equiv</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>The equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.to_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.to_fixed_equiv\" class=\"fn\">to_fixed_equiv</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts an owned value to the equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.as_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv\" class=\"fn\">as_fixed_equiv</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a reference into a reference to the equivalent fixed-point\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.as_fixed_equiv_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv_mut\" class=\"fn\">as_fixed_equiv_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a mutable reference into a mutable reference to the equivalent\nfixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.from_fixed_equiv\" class=\"fn\">from_fixed_equiv</a>(f: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts an owned equivalent fixed-point type to this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.ref_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.ref_from_fixed_equiv\" class=\"fn\">ref_from_fixed_equiv</a>(f: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts a reference to the equivalent fixed-point type into a reference\nto this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/prim_traits.rs.html#271\">source</a><a href=\"#method.mut_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.FixedEquiv.html#tymethod.mut_from_fixed_equiv\" class=\"fn\">mut_from_fixed_equiv</a>(f: &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts a mutable reference to the equivalent fixed-point type into a\nmutable reference to this type.</div></details></div></details>","FixedEquiv","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#impl-LossyFrom%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#912\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#674\">source</a><a href=\"#impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#674\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU32<FracSrc>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cbool%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#impl-LossyFrom%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#893\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<bool>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#impl-LossyFrom%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#910\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#675\">source</a><a href=\"#impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#675\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU64<FracSrc>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#impl-LossyFrom%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#908\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#676\">source</a><a href=\"#impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#676\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU128<FracSrc>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#673\">source</a><a href=\"#impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#673\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU16<FracSrc>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#672\">source</a><a href=\"#impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.16.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/convert.rs.html#672\">source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.26/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU8<FracSrc>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsOptionalNum-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalNum-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalNum.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalNum\">FixedBitsOptionalNum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalNum","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsOptionalSerde-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsOptionalSerde-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsOptionalSerde.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalSerde\">FixedBitsOptionalSerde</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsOptionalSerde","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-FixedBitsCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/traits_bits.rs.html#178\">source</a><a href=\"#impl-FixedBitsCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","FixedBitsCast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#375\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#379\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#378\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#376\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#377\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#381\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#382\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#374\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#380\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.16.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cmp.rs.html#373\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI8<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI64<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU16<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU32<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.26/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.26/src/fixed/cast.rs.html#195-198\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.26/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI128<Frac>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#impl-UnwrappedCast%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u8>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<isize>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u16>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u64>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<usize>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i128>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u128>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#impl-UnwrappedCast%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i64>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-UnwrappedCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i16>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i8>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-OverflowingCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-OverflowingCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-WrappingCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-WrappingCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-SaturatingCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-SaturatingCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u8>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<usize>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i128>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i64>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#impl-CheckedCast%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i8>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u64>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u16>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u128>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i16>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<isize>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#impl-CheckedCast%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-CheckedCast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-CheckedCast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i8>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u64>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Cisize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<isize>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<usize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<isize>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u16>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u8>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci16%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i16>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i128>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#impl-Cast%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu128%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u128>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i128>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cusize%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<usize>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#impl-Cast%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci64%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i64>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i16>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#impl-Cast%3CWrapping%3Ci32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u64>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#impl-Cast%3CWrapping%3Cu8%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u8>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.113/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#impl-PartialEq%3CValue%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.113/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.113/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.113/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Codec-for-u32\" class=\"impl\"><a href=\"#impl-Codec-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Codec for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Function for encoding itself by appending itself to\nthe provided vec of bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read</a>(r: &amp;mut Reader&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, InvalidMessage&gt;</h4></section></summary><div class='docblock'>Function for decoding itself from the provided reader\nwill return Some if the decoding was successful or\nNone if it was not.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_encoding\" class=\"method trait-impl\"><a href=\"#method.get_encoding\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_encoding</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convenience function for encoding the implementation\ninto a vec and returning it</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_bytes\" class=\"method trait-impl\"><a href=\"#method.read_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, InvalidMessage&gt;</h4></section></summary><div class='docblock'>Function for wrapping a call to the read function in\na Reader for the slice of bytes provided</div></details></div></details>","Codec","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBigEndian%3Cu32%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CBigEndian%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BigEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: BigEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BigEndian<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLittleEndian%3Cu32%3E%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CLittleEndian%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LittleEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: LittleEndian&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LittleEndian<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAsciiChar-for-u32\" class=\"impl\"><a href=\"#impl-ToAsciiChar-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToAsciiChar for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_char\" class=\"method trait-impl\"><a href=\"#method.to_ascii_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_ascii_char</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsciiChar, ToAsciiCharError&gt;</h4></section></summary><div class='docblock'>Convert to <code>AsciiChar</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_char_unchecked\" class=\"method trait-impl\"><a href=\"#method.to_ascii_char_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">to_ascii_char_unchecked</a>(self) -&gt; AsciiChar</h4></section></summary><div class='docblock'>Convert to <code>AsciiChar</code> without checking that it is an ASCII character. <a>Read more</a></div></details></div></details>","ToAsciiChar","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumExt-for-u32\" class=\"impl\"><a href=\"#impl-NumExt-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl NumExt for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_least\" class=\"method trait-impl\"><a href=\"#method.at_least\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">at_least</a>(self, lower_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>More readable version of <code>self.max(lower_limit)</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_most\" class=\"method trait-impl\"><a href=\"#method.at_most\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">at_most</a>(self, upper_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>More readable version of <code>self.min(upper_limit)</code></div></details></div></details>","NumExt","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Numeric-for-u32\" class=\"impl\"><a href=\"#impl-Numeric-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Numeric for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.INTEGRAL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.INTEGRAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">INTEGRAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>Is this an integer type?</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>Smallest finite value</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>Largest finite value</div></details><section id=\"method.to_f64\" class=\"method trait-impl\"><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a></h4></section><section id=\"method.from_f64\" class=\"method trait-impl\"><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_f64</a>(num: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","Numeric","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TensorDataTypeTrait-for-u32\" class=\"impl\"><a href=\"#impl-TensorDataTypeTrait-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TensorDataTypeTrait for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.DTYPE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.DTYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">DTYPE</a>: TensorDataType = TensorDataType::U32</h4></section></div></details>","TensorDataTypeTrait","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPrimitiveComponent%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CPrimitiveComponent%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PrimitiveComponent&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: PrimitiveComponent) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PrimitiveComponent>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTensorDimensionIndexSlider%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CTensorDimensionIndexSlider%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TensorDimensionIndexSlider&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: TensorDimensionIndexSlider) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TensorDimensionIndexSlider>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRgba32%3E-for-u32\" class=\"impl\"><a href=\"#impl-From%3CRgba32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Rgba32&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Rgba32) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rgba32>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ImageChannelType-for-u32\" class=\"impl\"><a href=\"#impl-ImageChannelType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ImageChannelType for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.CHANNEL_TYPE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.CHANNEL_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">CHANNEL_TYPE</a>: ChannelDatatype = ChannelDatatype::U32</h4></section></summary><div class='docblock'>The [<code>ChannelDatatype</code>] for this type.</div></details></div></details>","ImageChannelType","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#799\">source</a><a href=\"#impl-Rem%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#802\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<UVec3>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#710\">source</a><a href=\"#impl-Rem%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#713\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<UVec2>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#853\">source</a><a href=\"#impl-Rem%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#856\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<UVec4>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#583\">source</a><a href=\"#impl-Div%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#586\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UVec3>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#514\">source</a><a href=\"#impl-Div%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#517\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UVec2>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#617\">source</a><a href=\"#impl-Div%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#620\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UVec4>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#676\">source</a><a href=\"#impl-Mul%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#679\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UVec4>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#637\">source</a><a href=\"#impl-Mul%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#640\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UVec3>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#563\">source</a><a href=\"#impl-Mul%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#566\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UVec2>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#735\">source</a><a href=\"#impl-Add%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#738\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UVec4>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#691\">source</a><a href=\"#impl-Add%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#694\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UVec3>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#612\">source</a><a href=\"#impl-Add%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#615\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UVec2>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUVec3%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#745\">source</a><a href=\"#impl-Sub%3CUVec3%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec3.rs.html#748\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec3/struct.UVec3.html\" title=\"struct glam::u32::uvec3::UVec3\">UVec3</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UVec3>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUVec2%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#661\">source</a><a href=\"#impl-Sub%3CUVec2%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec2.rs.html#664\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec2/struct.UVec2.html\" title=\"struct glam::u32::uvec2::UVec2\">UVec2</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UVec2>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUVec4%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#794\">source</a><a href=\"#impl-Sub%3CUVec4%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.28.0/src/glam/u32/uvec4.rs.html#797\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.28.0/glam/u32/uvec4/struct.UVec4.html\" title=\"struct glam::u32::uvec4::UVec4\">UVec4</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UVec4>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Primitive-for-u32\" class=\"impl\"><a href=\"#impl-Primitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Primitive for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT_MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.DEFAULT_MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">DEFAULT_MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 4_294_967_295u32</h4></section></summary><div class='docblock'>The maximum value for this type of primitive within the context of color.\nFor floats, the maximum is <code>1.0</code>, whereas the integer types inherit their usual maximum values.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT_MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.DEFAULT_MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">DEFAULT_MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The minimum value for this type of primitive within the context of color.\nFor floats, the minimum is <code>0.0</code>, whereas the integer types inherit their usual minimum values.</div></details></div></details>","Primitive","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Div%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Div%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Rem%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Rem%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shl%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Shl%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitOr%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitOr%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(\n    self,\n    rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Sub%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Sub%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<section id=\"impl-ScalarOperand-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#41\">source</a><a href=\"#impl-ScalarOperand-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/impl_ops/trait.ScalarOperand.html\" title=\"trait ndarray::impl_ops::ScalarOperand\">ScalarOperand</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section>","ScalarOperand","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitAnd%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitAnd%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(\n    self,\n    rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Mul%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Mul%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Add%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-Add%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitXor%3CArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#impl-BitXor%3C%26ArrayBase%3CS,+D%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;,\n    D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_repr/struct.OwnedRepr.html\" title=\"struct ndarray::data_repr::OwnedRepr\">OwnedRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#336\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(\n    self,\n    rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&'a ArrayBase<S, D>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Roots-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#impl-Roots-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html\" title=\"trait num_integer::roots::Roots\">Roots</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#method.nth_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\" class=\"fn\">nth_root</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the truncated principal <code>n</code>th root of an integer\n– <code>if x &gt;= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the truncated principal square root of an integer – <code>⌊√x⌋</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#387\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the truncated principal cube root of an integer –\n<code>if x &gt;= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\">Read more</a></div></details></div></details>","Roots","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#impl-Integer-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.div_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer division. Returns the same result as <code>div</code> (<code>/</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.mod_floor\" class=\"fn\">mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer modulo operation. Returns the same result as <code>rem</code> (<code>%</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.gcd\" class=\"fn\">gcd</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) of the number and <code>other</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.lcm\" class=\"fn\">lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Lowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.gcd_lcm\" class=\"fn\">gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.divides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.divides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.divides\" class=\"fn\">divides</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Deprecated, use <code>is_multiple_of</code> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.is_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is a multiple of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.is_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_even\" class=\"fn\">is_even</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_odd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.is_odd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_odd\" class=\"fn\">is_odd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is not divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Simultaneous truncated integer division and modulus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.div_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\" class=\"fn\">div_ceil</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Ceiled integer division. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1053\">source</a><a href=\"#method.extended_gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd_lcm\" class=\"fn\">extended_gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Greatest common divisor, least common multiple, and Bézout coefficients.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#165-167\">source</a><a href=\"#method.extended_gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\" class=\"fn\">extended_gcd</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Greatest common divisor and Bézout coefficients. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#281\">source</a><a href=\"#method.div_mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\" class=\"fn\">div_mod_floor</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Self, Self)</a></h4></section></summary><div class='docblock'>Simultaneous floored integer division and modulus.\nReturns <code>(quotient, remainder)</code>. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#305-307\">source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\" class=\"fn\">next_multiple_of</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds up to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#338-340\">source</a><a href=\"#method.prev_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\" class=\"fn\">prev_multiple_of</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds down to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\">Read more</a></div></details></div></details>","Integer","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Mul%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Mul%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'a Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Sub%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Sub%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'a Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Div%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Div%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'a Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Rem%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&'a Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Rem%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Add%3C%26Complex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CComplex%3Cu32%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#impl-Add%3CComplex%3Cu32%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-complex/0.4/src/num_complex/lib.rs.html#1156\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-complex/0.4/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Complex<u32>>","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromData for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","rerun_c::CRecordingStream","rerun_c::CComponentTypeHandle"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()